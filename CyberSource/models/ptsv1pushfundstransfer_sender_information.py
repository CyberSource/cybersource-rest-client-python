# coding: utf-8

"""
    CyberSource Merged Spec

    All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
from six import iteritems
import re


class Ptsv1pushfundstransferSenderInformation(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'email': 'str',
        'first_name': 'str',
        'last_name': 'str',
        'middle_name': 'str',
        'postal_code': 'str',
        'building_number': 'str',
        'street_name': 'str',
        'address1': 'str',
        'address2': 'str',
        'locality': 'str',
        'administrative_area': 'str',
        'country': 'str',
        'date_of_birth': 'str',
        'phone_number': 'str',
        'payment_information': 'Ptsv1pushfundstransferSenderInformationPaymentInformation',
        'reference_number': 'str',
        'account': 'Ptsv1pushfundstransferSenderInformationAccount',
        'personal_identification': 'Ptsv1pushfundstransferSenderInformationPersonalIdentification',
        'type': 'str',
        'vat_registration_number': 'str'
    }

    attribute_map = {
        'name': 'name',
        'email': 'email',
        'first_name': 'firstName',
        'last_name': 'lastName',
        'middle_name': 'middleName',
        'postal_code': 'postalCode',
        'building_number': 'buildingNumber',
        'street_name': 'streetName',
        'address1': 'address1',
        'address2': 'address2',
        'locality': 'locality',
        'administrative_area': 'administrativeArea',
        'country': 'country',
        'date_of_birth': 'dateOfBirth',
        'phone_number': 'phoneNumber',
        'payment_information': 'paymentInformation',
        'reference_number': 'referenceNumber',
        'account': 'account',
        'personal_identification': 'personalIdentification',
        'type': 'type',
        'vat_registration_number': 'vatRegistrationNumber'
    }

    def __init__(self, name=None, email=None, first_name=None, last_name=None, middle_name=None, postal_code=None, building_number=None, street_name=None, address1=None, address2=None, locality=None, administrative_area=None, country=None, date_of_birth=None, phone_number=None, payment_information=None, reference_number=None, account=None, personal_identification=None, type=None, vat_registration_number=None):
        """
        Ptsv1pushfundstransferSenderInformation - a model defined in Swagger
        """

        self._name = None
        self._email = None
        self._first_name = None
        self._last_name = None
        self._middle_name = None
        self._postal_code = None
        self._building_number = None
        self._street_name = None
        self._address1 = None
        self._address2 = None
        self._locality = None
        self._administrative_area = None
        self._country = None
        self._date_of_birth = None
        self._phone_number = None
        self._payment_information = None
        self._reference_number = None
        self._account = None
        self._personal_identification = None
        self._type = None
        self._vat_registration_number = None

        if name is not None:
          self.name = name
        if email is not None:
          self.email = email
        if first_name is not None:
          self.first_name = first_name
        if last_name is not None:
          self.last_name = last_name
        if middle_name is not None:
          self.middle_name = middle_name
        if postal_code is not None:
          self.postal_code = postal_code
        if building_number is not None:
          self.building_number = building_number
        if street_name is not None:
          self.street_name = street_name
        if address1 is not None:
          self.address1 = address1
        if address2 is not None:
          self.address2 = address2
        if locality is not None:
          self.locality = locality
        if administrative_area is not None:
          self.administrative_area = administrative_area
        if country is not None:
          self.country = country
        if date_of_birth is not None:
          self.date_of_birth = date_of_birth
        if phone_number is not None:
          self.phone_number = phone_number
        if payment_information is not None:
          self.payment_information = payment_information
        if reference_number is not None:
          self.reference_number = reference_number
        if account is not None:
          self.account = account
        if personal_identification is not None:
          self.personal_identification = personal_identification
        if type is not None:
          self.type = type
        if vat_registration_number is not None:
          self.vat_registration_number = vat_registration_number

    @property
    def name(self):
        """
        Gets the name of this Ptsv1pushfundstransferSenderInformation.
        Name of sender.  Funds Disbursement  This value is the name of the originator sending the funds disbursement.  Government entities should use this field 

        :return: The name of this Ptsv1pushfundstransferSenderInformation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this Ptsv1pushfundstransferSenderInformation.
        Name of sender.  Funds Disbursement  This value is the name of the originator sending the funds disbursement.  Government entities should use this field 

        :param name: The name of this Ptsv1pushfundstransferSenderInformation.
        :type: str
        """

        self._name = name

    @property
    def email(self):
        """
        Gets the email of this Ptsv1pushfundstransferSenderInformation.
        Customer's email address, including the full domain name. 

        :return: The email of this Ptsv1pushfundstransferSenderInformation.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """
        Sets the email of this Ptsv1pushfundstransferSenderInformation.
        Customer's email address, including the full domain name. 

        :param email: The email of this Ptsv1pushfundstransferSenderInformation.
        :type: str
        """

        self._email = email

    @property
    def first_name(self):
        """
        Gets the first_name of this Ptsv1pushfundstransferSenderInformation.
        This field contains the first name of the entity funding the transaction Mandatory for card payments 

        :return: The first_name of this Ptsv1pushfundstransferSenderInformation.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """
        Sets the first_name of this Ptsv1pushfundstransferSenderInformation.
        This field contains the first name of the entity funding the transaction Mandatory for card payments 

        :param first_name: The first_name of this Ptsv1pushfundstransferSenderInformation.
        :type: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """
        Gets the last_name of this Ptsv1pushfundstransferSenderInformation.
        This field contains the last name of the entity funding the transaction Mandatory for card payments 

        :return: The last_name of this Ptsv1pushfundstransferSenderInformation.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """
        Sets the last_name of this Ptsv1pushfundstransferSenderInformation.
        This field contains the last name of the entity funding the transaction Mandatory for card payments 

        :param last_name: The last_name of this Ptsv1pushfundstransferSenderInformation.
        :type: str
        """

        self._last_name = last_name

    @property
    def middle_name(self):
        """
        Gets the middle_name of this Ptsv1pushfundstransferSenderInformation.
        This field contains the  middle name of the entity funding the transaction 

        :return: The middle_name of this Ptsv1pushfundstransferSenderInformation.
        :rtype: str
        """
        return self._middle_name

    @middle_name.setter
    def middle_name(self, middle_name):
        """
        Sets the middle_name of this Ptsv1pushfundstransferSenderInformation.
        This field contains the  middle name of the entity funding the transaction 

        :param middle_name: The middle_name of this Ptsv1pushfundstransferSenderInformation.
        :type: str
        """

        self._middle_name = middle_name

    @property
    def postal_code(self):
        """
        Gets the postal_code of this Ptsv1pushfundstransferSenderInformation.
        Sender's postal code.  For USA, this must be a valid value of 5 digits or 5 digits hyphen 4 digits, for example '63368', '63368-5555'. For other regions, this can be alphanumeric, length 1-10.  Required for FDCCompass. 

        :return: The postal_code of this Ptsv1pushfundstransferSenderInformation.
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """
        Sets the postal_code of this Ptsv1pushfundstransferSenderInformation.
        Sender's postal code.  For USA, this must be a valid value of 5 digits or 5 digits hyphen 4 digits, for example '63368', '63368-5555'. For other regions, this can be alphanumeric, length 1-10.  Required for FDCCompass. 

        :param postal_code: The postal_code of this Ptsv1pushfundstransferSenderInformation.
        :type: str
        """

        self._postal_code = postal_code

    @property
    def building_number(self):
        """
        Gets the building_number of this Ptsv1pushfundstransferSenderInformation.
        Building number in the street address.  For example, if the street address is: Rua da Quitanda 187 then the building number is 187.  Applicable to domestic Colombia transactions only. 

        :return: The building_number of this Ptsv1pushfundstransferSenderInformation.
        :rtype: str
        """
        return self._building_number

    @building_number.setter
    def building_number(self, building_number):
        """
        Sets the building_number of this Ptsv1pushfundstransferSenderInformation.
        Building number in the street address.  For example, if the street address is: Rua da Quitanda 187 then the building number is 187.  Applicable to domestic Colombia transactions only. 

        :param building_number: The building_number of this Ptsv1pushfundstransferSenderInformation.
        :type: str
        """

        self._building_number = building_number

    @property
    def street_name(self):
        """
        Gets the street_name of this Ptsv1pushfundstransferSenderInformation.
        This field contains the street name of the recipient's address.  Applicable to domestic Colombia transactions only. 

        :return: The street_name of this Ptsv1pushfundstransferSenderInformation.
        :rtype: str
        """
        return self._street_name

    @street_name.setter
    def street_name(self, street_name):
        """
        Sets the street_name of this Ptsv1pushfundstransferSenderInformation.
        This field contains the street name of the recipient's address.  Applicable to domestic Colombia transactions only. 

        :param street_name: The street_name of this Ptsv1pushfundstransferSenderInformation.
        :type: str
        """

        self._street_name = street_name

    @property
    def address1(self):
        """
        Gets the address1 of this Ptsv1pushfundstransferSenderInformation.
        Street address of sender.  Funds Disbursement  This value is the address of the originator sending the funds disbursement.  Required for card transactions 

        :return: The address1 of this Ptsv1pushfundstransferSenderInformation.
        :rtype: str
        """
        return self._address1

    @address1.setter
    def address1(self, address1):
        """
        Sets the address1 of this Ptsv1pushfundstransferSenderInformation.
        Street address of sender.  Funds Disbursement  This value is the address of the originator sending the funds disbursement.  Required for card transactions 

        :param address1: The address1 of this Ptsv1pushfundstransferSenderInformation.
        :type: str
        """

        self._address1 = address1

    @property
    def address2(self):
        """
        Gets the address2 of this Ptsv1pushfundstransferSenderInformation.
        Used for additional address information. For example: Attention: Accounts Payable  Optional field. 

        :return: The address2 of this Ptsv1pushfundstransferSenderInformation.
        :rtype: str
        """
        return self._address2

    @address2.setter
    def address2(self, address2):
        """
        Sets the address2 of this Ptsv1pushfundstransferSenderInformation.
        Used for additional address information. For example: Attention: Accounts Payable  Optional field. 

        :param address2: The address2 of this Ptsv1pushfundstransferSenderInformation.
        :type: str
        """

        self._address2 = address2

    @property
    def locality(self):
        """
        Gets the locality of this Ptsv1pushfundstransferSenderInformation.
        The sender's city Mandatory for card payments 

        :return: The locality of this Ptsv1pushfundstransferSenderInformation.
        :rtype: str
        """
        return self._locality

    @locality.setter
    def locality(self, locality):
        """
        Sets the locality of this Ptsv1pushfundstransferSenderInformation.
        The sender's city Mandatory for card payments 

        :param locality: The locality of this Ptsv1pushfundstransferSenderInformation.
        :type: str
        """

        self._locality = locality

    @property
    def administrative_area(self):
        """
        Gets the administrative_area of this Ptsv1pushfundstransferSenderInformation.
        Sender's state. Use the State, Province, and Territory Codes for the United States and Canada.The sender's province, state or territory. Conditional, required if sender's country is USA or CAN. Must be uppercase alpha 2 or 3 character country subdivision code.  See https://developer.cybersource.com/library/documentation/sbc/quickref/states_and_provinces.pdf  Mandatory for card payments 

        :return: The administrative_area of this Ptsv1pushfundstransferSenderInformation.
        :rtype: str
        """
        return self._administrative_area

    @administrative_area.setter
    def administrative_area(self, administrative_area):
        """
        Sets the administrative_area of this Ptsv1pushfundstransferSenderInformation.
        Sender's state. Use the State, Province, and Territory Codes for the United States and Canada.The sender's province, state or territory. Conditional, required if sender's country is USA or CAN. Must be uppercase alpha 2 or 3 character country subdivision code.  See https://developer.cybersource.com/library/documentation/sbc/quickref/states_and_provinces.pdf  Mandatory for card payments 

        :param administrative_area: The administrative_area of this Ptsv1pushfundstransferSenderInformation.
        :type: str
        """

        self._administrative_area = administrative_area

    @property
    def country(self):
        """
        Gets the country of this Ptsv1pushfundstransferSenderInformation.
        Sender's country code. Use ISO Standard Alpha Country Codes.  https://developer.cybersource.com/library/documentation/sbc/quickref/countries_alpha_list.pdf 

        :return: The country of this Ptsv1pushfundstransferSenderInformation.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """
        Sets the country of this Ptsv1pushfundstransferSenderInformation.
        Sender's country code. Use ISO Standard Alpha Country Codes.  https://developer.cybersource.com/library/documentation/sbc/quickref/countries_alpha_list.pdf 

        :param country: The country of this Ptsv1pushfundstransferSenderInformation.
        :type: str
        """

        self._country = country

    @property
    def date_of_birth(self):
        """
        Gets the date_of_birth of this Ptsv1pushfundstransferSenderInformation.
        Sender's date of birth in YYYYMMDD format. 

        :return: The date_of_birth of this Ptsv1pushfundstransferSenderInformation.
        :rtype: str
        """
        return self._date_of_birth

    @date_of_birth.setter
    def date_of_birth(self, date_of_birth):
        """
        Sets the date_of_birth of this Ptsv1pushfundstransferSenderInformation.
        Sender's date of birth in YYYYMMDD format. 

        :param date_of_birth: The date_of_birth of this Ptsv1pushfundstransferSenderInformation.
        :type: str
        """

        self._date_of_birth = date_of_birth

    @property
    def phone_number(self):
        """
        Gets the phone_number of this Ptsv1pushfundstransferSenderInformation.
        Customer's phone number.  It is recommended that you include the country code when the order is from outside the U.S. 

        :return: The phone_number of this Ptsv1pushfundstransferSenderInformation.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """
        Sets the phone_number of this Ptsv1pushfundstransferSenderInformation.
        Customer's phone number.  It is recommended that you include the country code when the order is from outside the U.S. 

        :param phone_number: The phone_number of this Ptsv1pushfundstransferSenderInformation.
        :type: str
        """

        self._phone_number = phone_number

    @property
    def payment_information(self):
        """
        Gets the payment_information of this Ptsv1pushfundstransferSenderInformation.

        :return: The payment_information of this Ptsv1pushfundstransferSenderInformation.
        :rtype: Ptsv1pushfundstransferSenderInformationPaymentInformation
        """
        return self._payment_information

    @payment_information.setter
    def payment_information(self, payment_information):
        """
        Sets the payment_information of this Ptsv1pushfundstransferSenderInformation.

        :param payment_information: The payment_information of this Ptsv1pushfundstransferSenderInformation.
        :type: Ptsv1pushfundstransferSenderInformationPaymentInformation
        """

        self._payment_information = payment_information

    @property
    def reference_number(self):
        """
        Gets the reference_number of this Ptsv1pushfundstransferSenderInformation.
        Reference number generated by you that uniquely identifies the sender. 

        :return: The reference_number of this Ptsv1pushfundstransferSenderInformation.
        :rtype: str
        """
        return self._reference_number

    @reference_number.setter
    def reference_number(self, reference_number):
        """
        Sets the reference_number of this Ptsv1pushfundstransferSenderInformation.
        Reference number generated by you that uniquely identifies the sender. 

        :param reference_number: The reference_number of this Ptsv1pushfundstransferSenderInformation.
        :type: str
        """

        self._reference_number = reference_number

    @property
    def account(self):
        """
        Gets the account of this Ptsv1pushfundstransferSenderInformation.

        :return: The account of this Ptsv1pushfundstransferSenderInformation.
        :rtype: Ptsv1pushfundstransferSenderInformationAccount
        """
        return self._account

    @account.setter
    def account(self, account):
        """
        Sets the account of this Ptsv1pushfundstransferSenderInformation.

        :param account: The account of this Ptsv1pushfundstransferSenderInformation.
        :type: Ptsv1pushfundstransferSenderInformationAccount
        """

        self._account = account

    @property
    def personal_identification(self):
        """
        Gets the personal_identification of this Ptsv1pushfundstransferSenderInformation.

        :return: The personal_identification of this Ptsv1pushfundstransferSenderInformation.
        :rtype: Ptsv1pushfundstransferSenderInformationPersonalIdentification
        """
        return self._personal_identification

    @personal_identification.setter
    def personal_identification(self, personal_identification):
        """
        Sets the personal_identification of this Ptsv1pushfundstransferSenderInformation.

        :param personal_identification: The personal_identification of this Ptsv1pushfundstransferSenderInformation.
        :type: Ptsv1pushfundstransferSenderInformationPersonalIdentification
        """

        self._personal_identification = personal_identification

    @property
    def type(self):
        """
        Gets the type of this Ptsv1pushfundstransferSenderInformation.
        `B` for Business or `I` for individual. 

        :return: The type of this Ptsv1pushfundstransferSenderInformation.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """
        Sets the type of this Ptsv1pushfundstransferSenderInformation.
        `B` for Business or `I` for individual. 

        :param type: The type of this Ptsv1pushfundstransferSenderInformation.
        :type: str
        """

        self._type = type

    @property
    def vat_registration_number(self):
        """
        Gets the vat_registration_number of this Ptsv1pushfundstransferSenderInformation.
        Customer's government-assigned tax identification number. 

        :return: The vat_registration_number of this Ptsv1pushfundstransferSenderInformation.
        :rtype: str
        """
        return self._vat_registration_number

    @vat_registration_number.setter
    def vat_registration_number(self, vat_registration_number):
        """
        Sets the vat_registration_number of this Ptsv1pushfundstransferSenderInformation.
        Customer's government-assigned tax identification number. 

        :param vat_registration_number: The vat_registration_number of this Ptsv1pushfundstransferSenderInformation.
        :type: str
        """

        self._vat_registration_number = vat_registration_number

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, Ptsv1pushfundstransferSenderInformation):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
