# coding: utf-8

"""
    CyberSource Merged Spec

    All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
from six import iteritems
import re


class GetSubscriptionResponse1(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'links': 'GetSubscriptionResponse1Links',
        'buyer_information': 'GetSubscriptionResponse1BuyerInformation',
        'payment_instrument': 'GetSubscriptionResponse1PaymentInstrument',
        'shipping_address': 'GetSubscriptionResponse1ShippingAddress'
    }

    attribute_map = {
        'links': '_links',
        'buyer_information': 'buyerInformation',
        'payment_instrument': 'paymentInstrument',
        'shipping_address': 'shippingAddress'
    }

    def __init__(self, links=None, buyer_information=None, payment_instrument=None, shipping_address=None):
        """
        GetSubscriptionResponse1 - a model defined in Swagger
        """

        self._links = None
        self._buyer_information = None
        self._payment_instrument = None
        self._shipping_address = None

        if links is not None:
          self.links = links
        if buyer_information is not None:
          self.buyer_information = buyer_information
        if payment_instrument is not None:
          self.payment_instrument = payment_instrument
        if shipping_address is not None:
          self.shipping_address = shipping_address

    @property
    def links(self):
        """
        Gets the links of this GetSubscriptionResponse1.

        :return: The links of this GetSubscriptionResponse1.
        :rtype: GetSubscriptionResponse1Links
        """
        return self._links

    @links.setter
    def links(self, links):
        """
        Sets the links of this GetSubscriptionResponse1.

        :param links: The links of this GetSubscriptionResponse1.
        :type: GetSubscriptionResponse1Links
        """

        self._links = links

    @property
    def buyer_information(self):
        """
        Gets the buyer_information of this GetSubscriptionResponse1.

        :return: The buyer_information of this GetSubscriptionResponse1.
        :rtype: GetSubscriptionResponse1BuyerInformation
        """
        return self._buyer_information

    @buyer_information.setter
    def buyer_information(self, buyer_information):
        """
        Sets the buyer_information of this GetSubscriptionResponse1.

        :param buyer_information: The buyer_information of this GetSubscriptionResponse1.
        :type: GetSubscriptionResponse1BuyerInformation
        """

        self._buyer_information = buyer_information

    @property
    def payment_instrument(self):
        """
        Gets the payment_instrument of this GetSubscriptionResponse1.

        :return: The payment_instrument of this GetSubscriptionResponse1.
        :rtype: GetSubscriptionResponse1PaymentInstrument
        """
        return self._payment_instrument

    @payment_instrument.setter
    def payment_instrument(self, payment_instrument):
        """
        Sets the payment_instrument of this GetSubscriptionResponse1.

        :param payment_instrument: The payment_instrument of this GetSubscriptionResponse1.
        :type: GetSubscriptionResponse1PaymentInstrument
        """

        self._payment_instrument = payment_instrument

    @property
    def shipping_address(self):
        """
        Gets the shipping_address of this GetSubscriptionResponse1.

        :return: The shipping_address of this GetSubscriptionResponse1.
        :rtype: GetSubscriptionResponse1ShippingAddress
        """
        return self._shipping_address

    @shipping_address.setter
    def shipping_address(self, shipping_address):
        """
        Sets the shipping_address of this GetSubscriptionResponse1.

        :param shipping_address: The shipping_address of this GetSubscriptionResponse1.
        :type: GetSubscriptionResponse1ShippingAddress
        """

        self._shipping_address = shipping_address

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, GetSubscriptionResponse1):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
