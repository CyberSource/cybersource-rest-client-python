# coding: utf-8

"""
    CyberSource Merged Spec

    All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class InlineResponse2002(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'registration_information': 'Boardingv1registrationsRegistrationInformation',
        'integration_information': 'InlineResponse2002IntegrationInformation',
        'organization_information': 'Boardingv1registrationsOrganizationInformation',
        'product_information': 'Boardingv1registrationsProductInformation',
        'product_information_setups': 'list[InlineResponse2011ProductInformationSetups]',
        'document_information': 'Boardingv1registrationsDocumentInformation',
        'details': 'dict(str, list[object])'
    }

    attribute_map = {
        'registration_information': 'registrationInformation',
        'integration_information': 'integrationInformation',
        'organization_information': 'organizationInformation',
        'product_information': 'productInformation',
        'product_information_setups': 'productInformationSetups',
        'document_information': 'documentInformation',
        'details': 'details'
    }

    def __init__(self, registration_information=None, integration_information=None, organization_information=None, product_information=None, product_information_setups=None, document_information=None, details=None):
        """
        InlineResponse2002 - a model defined in Swagger
        """

        self._registration_information = None
        self._integration_information = None
        self._organization_information = None
        self._product_information = None
        self._product_information_setups = None
        self._document_information = None
        self._details = None

        if registration_information is not None:
          self.registration_information = registration_information
        if integration_information is not None:
          self.integration_information = integration_information
        if organization_information is not None:
          self.organization_information = organization_information
        if product_information is not None:
          self.product_information = product_information
        if product_information_setups is not None:
          self.product_information_setups = product_information_setups
        if document_information is not None:
          self.document_information = document_information
        if details is not None:
          self.details = details

    @property
    def registration_information(self):
        """
        Gets the registration_information of this InlineResponse2002.

        :return: The registration_information of this InlineResponse2002.
        :rtype: Boardingv1registrationsRegistrationInformation
        """
        return self._registration_information

    @registration_information.setter
    def registration_information(self, registration_information):
        """
        Sets the registration_information of this InlineResponse2002.

        :param registration_information: The registration_information of this InlineResponse2002.
        :type: Boardingv1registrationsRegistrationInformation
        """

        self._registration_information = registration_information

    @property
    def integration_information(self):
        """
        Gets the integration_information of this InlineResponse2002.

        :return: The integration_information of this InlineResponse2002.
        :rtype: InlineResponse2002IntegrationInformation
        """
        return self._integration_information

    @integration_information.setter
    def integration_information(self, integration_information):
        """
        Sets the integration_information of this InlineResponse2002.

        :param integration_information: The integration_information of this InlineResponse2002.
        :type: InlineResponse2002IntegrationInformation
        """

        self._integration_information = integration_information

    @property
    def organization_information(self):
        """
        Gets the organization_information of this InlineResponse2002.

        :return: The organization_information of this InlineResponse2002.
        :rtype: Boardingv1registrationsOrganizationInformation
        """
        return self._organization_information

    @organization_information.setter
    def organization_information(self, organization_information):
        """
        Sets the organization_information of this InlineResponse2002.

        :param organization_information: The organization_information of this InlineResponse2002.
        :type: Boardingv1registrationsOrganizationInformation
        """

        self._organization_information = organization_information

    @property
    def product_information(self):
        """
        Gets the product_information of this InlineResponse2002.

        :return: The product_information of this InlineResponse2002.
        :rtype: Boardingv1registrationsProductInformation
        """
        return self._product_information

    @product_information.setter
    def product_information(self, product_information):
        """
        Sets the product_information of this InlineResponse2002.

        :param product_information: The product_information of this InlineResponse2002.
        :type: Boardingv1registrationsProductInformation
        """

        self._product_information = product_information

    @property
    def product_information_setups(self):
        """
        Gets the product_information_setups of this InlineResponse2002.

        :return: The product_information_setups of this InlineResponse2002.
        :rtype: list[InlineResponse2011ProductInformationSetups]
        """
        return self._product_information_setups

    @product_information_setups.setter
    def product_information_setups(self, product_information_setups):
        """
        Sets the product_information_setups of this InlineResponse2002.

        :param product_information_setups: The product_information_setups of this InlineResponse2002.
        :type: list[InlineResponse2011ProductInformationSetups]
        """

        self._product_information_setups = product_information_setups

    @property
    def document_information(self):
        """
        Gets the document_information of this InlineResponse2002.

        :return: The document_information of this InlineResponse2002.
        :rtype: Boardingv1registrationsDocumentInformation
        """
        return self._document_information

    @document_information.setter
    def document_information(self, document_information):
        """
        Sets the document_information of this InlineResponse2002.

        :param document_information: The document_information of this InlineResponse2002.
        :type: Boardingv1registrationsDocumentInformation
        """

        self._document_information = document_information

    @property
    def details(self):
        """
        Gets the details of this InlineResponse2002.

        :return: The details of this InlineResponse2002.
        :rtype: dict(str, list[object])
        """
        return self._details

    @details.setter
    def details(self, details):
        """
        Sets the details of this InlineResponse2002.

        :param details: The details of this InlineResponse2002.
        :type: dict(str, list[object])
        """

        self._details = details

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, InlineResponse2002):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
