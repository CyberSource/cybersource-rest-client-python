# coding: utf-8

"""
    CyberSource Merged Spec

    All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
from six import iteritems
import re


class Ptsv2paymentreferencesOrderInformationShipTo(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'email': 'str',
        'title': 'str',
        'first_name': 'str',
        'middle_name': 'str',
        'last_name': 'str',
        'company': 'str',
        'address1': 'str',
        'address2': 'str',
        'district': 'str',
        'locality': 'str',
        'administrative_area': 'str',
        'postal_code': 'str',
        'country': 'str',
        'building_number': 'str',
        'phone_number': 'str',
        'immutable': 'str',
        'not_applicable': 'str',
        'county': 'str'
    }

    attribute_map = {
        'email': 'email',
        'title': 'title',
        'first_name': 'firstName',
        'middle_name': 'middleName',
        'last_name': 'lastName',
        'company': 'company',
        'address1': 'address1',
        'address2': 'address2',
        'district': 'district',
        'locality': 'locality',
        'administrative_area': 'administrativeArea',
        'postal_code': 'postalCode',
        'country': 'country',
        'building_number': 'buildingNumber',
        'phone_number': 'phoneNumber',
        'immutable': 'immutable',
        'not_applicable': 'notApplicable',
        'county': 'county'
    }

    def __init__(self, email=None, title=None, first_name=None, middle_name=None, last_name=None, company=None, address1=None, address2=None, district=None, locality=None, administrative_area=None, postal_code=None, country=None, building_number=None, phone_number=None, immutable=None, not_applicable=None, county=None):
        """
        Ptsv2paymentreferencesOrderInformationShipTo - a model defined in Swagger
        """

        self._email = None
        self._title = None
        self._first_name = None
        self._middle_name = None
        self._last_name = None
        self._company = None
        self._address1 = None
        self._address2 = None
        self._district = None
        self._locality = None
        self._administrative_area = None
        self._postal_code = None
        self._country = None
        self._building_number = None
        self._phone_number = None
        self._immutable = None
        self._not_applicable = None
        self._county = None

        if email is not None:
          self.email = email
        if title is not None:
          self.title = title
        if first_name is not None:
          self.first_name = first_name
        if middle_name is not None:
          self.middle_name = middle_name
        if last_name is not None:
          self.last_name = last_name
        if company is not None:
          self.company = company
        if address1 is not None:
          self.address1 = address1
        if address2 is not None:
          self.address2 = address2
        if district is not None:
          self.district = district
        if locality is not None:
          self.locality = locality
        if administrative_area is not None:
          self.administrative_area = administrative_area
        if postal_code is not None:
          self.postal_code = postal_code
        if country is not None:
          self.country = country
        if building_number is not None:
          self.building_number = building_number
        if phone_number is not None:
          self.phone_number = phone_number
        if immutable is not None:
          self.immutable = immutable
        if not_applicable is not None:
          self.not_applicable = not_applicable
        if county is not None:
          self.county = county

    @property
    def email(self):
        """
        Gets the email of this Ptsv2paymentreferencesOrderInformationShipTo.
        Customer's primary email address, including the full domain name. 

        :return: The email of this Ptsv2paymentreferencesOrderInformationShipTo.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """
        Sets the email of this Ptsv2paymentreferencesOrderInformationShipTo.
        Customer's primary email address, including the full domain name. 

        :param email: The email of this Ptsv2paymentreferencesOrderInformationShipTo.
        :type: str
        """

        self._email = email

    @property
    def title(self):
        """
        Gets the title of this Ptsv2paymentreferencesOrderInformationShipTo.
        The title of the person receiving the product.

        :return: The title of this Ptsv2paymentreferencesOrderInformationShipTo.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """
        Sets the title of this Ptsv2paymentreferencesOrderInformationShipTo.
        The title of the person receiving the product.

        :param title: The title of this Ptsv2paymentreferencesOrderInformationShipTo.
        :type: str
        """

        self._title = title

    @property
    def first_name(self):
        """
        Gets the first_name of this Ptsv2paymentreferencesOrderInformationShipTo.
        First name of the recipient.  #### Litle Maximum length: 25  #### All other processors Maximum length: 60  Optional field. 

        :return: The first_name of this Ptsv2paymentreferencesOrderInformationShipTo.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """
        Sets the first_name of this Ptsv2paymentreferencesOrderInformationShipTo.
        First name of the recipient.  #### Litle Maximum length: 25  #### All other processors Maximum length: 60  Optional field. 

        :param first_name: The first_name of this Ptsv2paymentreferencesOrderInformationShipTo.
        :type: str
        """

        self._first_name = first_name

    @property
    def middle_name(self):
        """
        Gets the middle_name of this Ptsv2paymentreferencesOrderInformationShipTo.
        Middle name of the recipient.  #### Litle Maximum length: 25  #### All other processors Maximum length: 60  Optional field. 

        :return: The middle_name of this Ptsv2paymentreferencesOrderInformationShipTo.
        :rtype: str
        """
        return self._middle_name

    @middle_name.setter
    def middle_name(self, middle_name):
        """
        Sets the middle_name of this Ptsv2paymentreferencesOrderInformationShipTo.
        Middle name of the recipient.  #### Litle Maximum length: 25  #### All other processors Maximum length: 60  Optional field. 

        :param middle_name: The middle_name of this Ptsv2paymentreferencesOrderInformationShipTo.
        :type: str
        """

        self._middle_name = middle_name

    @property
    def last_name(self):
        """
        Gets the last_name of this Ptsv2paymentreferencesOrderInformationShipTo.
        Last name of the recipient.  #### Litle Maximum length: 25  #### All other processors Maximum length: 60  Optional field. 

        :return: The last_name of this Ptsv2paymentreferencesOrderInformationShipTo.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """
        Sets the last_name of this Ptsv2paymentreferencesOrderInformationShipTo.
        Last name of the recipient.  #### Litle Maximum length: 25  #### All other processors Maximum length: 60  Optional field. 

        :param last_name: The last_name of this Ptsv2paymentreferencesOrderInformationShipTo.
        :type: str
        """

        self._last_name = last_name

    @property
    def company(self):
        """
        Gets the company of this Ptsv2paymentreferencesOrderInformationShipTo.
        Name of the customer's company. 

        :return: The company of this Ptsv2paymentreferencesOrderInformationShipTo.
        :rtype: str
        """
        return self._company

    @company.setter
    def company(self, company):
        """
        Sets the company of this Ptsv2paymentreferencesOrderInformationShipTo.
        Name of the customer's company. 

        :param company: The company of this Ptsv2paymentreferencesOrderInformationShipTo.
        :type: str
        """

        self._company = company

    @property
    def address1(self):
        """
        Gets the address1 of this Ptsv2paymentreferencesOrderInformationShipTo.
        First line of the shipping address.  Required field for authorization if any shipping address information is included in the request; otherwise, optional.  #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder's location when shipTo objects are not present. 

        :return: The address1 of this Ptsv2paymentreferencesOrderInformationShipTo.
        :rtype: str
        """
        return self._address1

    @address1.setter
    def address1(self, address1):
        """
        Sets the address1 of this Ptsv2paymentreferencesOrderInformationShipTo.
        First line of the shipping address.  Required field for authorization if any shipping address information is included in the request; otherwise, optional.  #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder's location when shipTo objects are not present. 

        :param address1: The address1 of this Ptsv2paymentreferencesOrderInformationShipTo.
        :type: str
        """

        self._address1 = address1

    @property
    def address2(self):
        """
        Gets the address2 of this Ptsv2paymentreferencesOrderInformationShipTo.
        Second line of the shipping address.  Optional field.  #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder's location when shipTo objects are not present. 

        :return: The address2 of this Ptsv2paymentreferencesOrderInformationShipTo.
        :rtype: str
        """
        return self._address2

    @address2.setter
    def address2(self, address2):
        """
        Sets the address2 of this Ptsv2paymentreferencesOrderInformationShipTo.
        Second line of the shipping address.  Optional field.  #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder's location when shipTo objects are not present. 

        :param address2: The address2 of this Ptsv2paymentreferencesOrderInformationShipTo.
        :type: str
        """

        self._address2 = address2

    @property
    def district(self):
        """
        Gets the district of this Ptsv2paymentreferencesOrderInformationShipTo.
        Neighborhood, community, or region within a city or municipality.

        :return: The district of this Ptsv2paymentreferencesOrderInformationShipTo.
        :rtype: str
        """
        return self._district

    @district.setter
    def district(self, district):
        """
        Sets the district of this Ptsv2paymentreferencesOrderInformationShipTo.
        Neighborhood, community, or region within a city or municipality.

        :param district: The district of this Ptsv2paymentreferencesOrderInformationShipTo.
        :type: str
        """

        self._district = district

    @property
    def locality(self):
        """
        Gets the locality of this Ptsv2paymentreferencesOrderInformationShipTo.
        City of the shipping address.  Required field for authorization if any shipping address information is included in the request and shipping to the U.S. or Canada; otherwise, optional.  #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder's location when shipTo objects are not present. 

        :return: The locality of this Ptsv2paymentreferencesOrderInformationShipTo.
        :rtype: str
        """
        return self._locality

    @locality.setter
    def locality(self, locality):
        """
        Sets the locality of this Ptsv2paymentreferencesOrderInformationShipTo.
        City of the shipping address.  Required field for authorization if any shipping address information is included in the request and shipping to the U.S. or Canada; otherwise, optional.  #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder's location when shipTo objects are not present. 

        :param locality: The locality of this Ptsv2paymentreferencesOrderInformationShipTo.
        :type: str
        """

        self._locality = locality

    @property
    def administrative_area(self):
        """
        Gets the administrative_area of this Ptsv2paymentreferencesOrderInformationShipTo.
        State or province of the shipping address. Use the [State, Province, and Territory Codes for the United States and Canada](https://developer.cybersource.com/library/documentation/sbc/quickref/states_and_provinces.pdf) (maximum length: 2)   Required field for authorization if any shipping address information is included in the request and shipping to the U.S. or Canada; otherwise, optional.  #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder's location when shipTo objects are not present. 

        :return: The administrative_area of this Ptsv2paymentreferencesOrderInformationShipTo.
        :rtype: str
        """
        return self._administrative_area

    @administrative_area.setter
    def administrative_area(self, administrative_area):
        """
        Sets the administrative_area of this Ptsv2paymentreferencesOrderInformationShipTo.
        State or province of the shipping address. Use the [State, Province, and Territory Codes for the United States and Canada](https://developer.cybersource.com/library/documentation/sbc/quickref/states_and_provinces.pdf) (maximum length: 2)   Required field for authorization if any shipping address information is included in the request and shipping to the U.S. or Canada; otherwise, optional.  #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder's location when shipTo objects are not present. 

        :param administrative_area: The administrative_area of this Ptsv2paymentreferencesOrderInformationShipTo.
        :type: str
        """

        self._administrative_area = administrative_area

    @property
    def postal_code(self):
        """
        Gets the postal_code of this Ptsv2paymentreferencesOrderInformationShipTo.
        Postal code for the shipping address. The postal code must consist of 5 to 9 digits.  Required field for authorization if any shipping address information is included in the request and shipping to the U.S. or Canada; otherwise, optional.  When the billing country is the U.S., the 9-digit postal code must follow this format: [5 digits][dash][4 digits]  Example 12345-6789  When the billing country is Canada, the 6-digit postal code must follow this format: [alpha][numeric][alpha][space][numeric][alpha][numeric]  Example A1B 2C3  #### American Express Direct Before sending the postal code to the processor, all nonalphanumeric characters are removed and, if the remaining value is longer than nine characters, the value is truncated starting from the right side. #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder's location when shipTo objects are not present. 

        :return: The postal_code of this Ptsv2paymentreferencesOrderInformationShipTo.
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """
        Sets the postal_code of this Ptsv2paymentreferencesOrderInformationShipTo.
        Postal code for the shipping address. The postal code must consist of 5 to 9 digits.  Required field for authorization if any shipping address information is included in the request and shipping to the U.S. or Canada; otherwise, optional.  When the billing country is the U.S., the 9-digit postal code must follow this format: [5 digits][dash][4 digits]  Example 12345-6789  When the billing country is Canada, the 6-digit postal code must follow this format: [alpha][numeric][alpha][space][numeric][alpha][numeric]  Example A1B 2C3  #### American Express Direct Before sending the postal code to the processor, all nonalphanumeric characters are removed and, if the remaining value is longer than nine characters, the value is truncated starting from the right side. #### Tax Calculation Optional field for U.S. and Canadian taxes. Not applicable to international and value added taxes. Billing address objects will be used to determine the cardholder's location when shipTo objects are not present. 

        :param postal_code: The postal_code of this Ptsv2paymentreferencesOrderInformationShipTo.
        :type: str
        """

        self._postal_code = postal_code

    @property
    def country(self):
        """
        Gets the country of this Ptsv2paymentreferencesOrderInformationShipTo.
        Country of the shipping address. Use the two-character [ISO Standard Country Codes.](http://apps.cybersource.com/library/documentation/sbc/quickref/countries_alpha_list.pdf)  Required field for authorization if any shipping address information is included in the request; otherwise, optional.  #### Tax Calculation Optional field for U.S., Canadian, international tax, and value added taxes. Billing address objects will be used to determine the cardholder's location when shipTo objects are not present. 

        :return: The country of this Ptsv2paymentreferencesOrderInformationShipTo.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """
        Sets the country of this Ptsv2paymentreferencesOrderInformationShipTo.
        Country of the shipping address. Use the two-character [ISO Standard Country Codes.](http://apps.cybersource.com/library/documentation/sbc/quickref/countries_alpha_list.pdf)  Required field for authorization if any shipping address information is included in the request; otherwise, optional.  #### Tax Calculation Optional field for U.S., Canadian, international tax, and value added taxes. Billing address objects will be used to determine the cardholder's location when shipTo objects are not present. 

        :param country: The country of this Ptsv2paymentreferencesOrderInformationShipTo.
        :type: str
        """

        self._country = country

    @property
    def building_number(self):
        """
        Gets the building_number of this Ptsv2paymentreferencesOrderInformationShipTo.
        Building number in the street address. For example, the building number is 187 in the following address:  Rua da Quitanda 187 

        :return: The building_number of this Ptsv2paymentreferencesOrderInformationShipTo.
        :rtype: str
        """
        return self._building_number

    @building_number.setter
    def building_number(self, building_number):
        """
        Sets the building_number of this Ptsv2paymentreferencesOrderInformationShipTo.
        Building number in the street address. For example, the building number is 187 in the following address:  Rua da Quitanda 187 

        :param building_number: The building_number of this Ptsv2paymentreferencesOrderInformationShipTo.
        :type: str
        """

        self._building_number = building_number

    @property
    def phone_number(self):
        """
        Gets the phone_number of this Ptsv2paymentreferencesOrderInformationShipTo.
        Phone number associated with the shipping address.

        :return: The phone_number of this Ptsv2paymentreferencesOrderInformationShipTo.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """
        Sets the phone_number of this Ptsv2paymentreferencesOrderInformationShipTo.
        Phone number associated with the shipping address.

        :param phone_number: The phone_number of this Ptsv2paymentreferencesOrderInformationShipTo.
        :type: str
        """

        self._phone_number = phone_number

    @property
    def immutable(self):
        """
        Gets the immutable of this Ptsv2paymentreferencesOrderInformationShipTo.
        Indicates whether customers are permitted to edit the shipping address in their PayPal account. Possible values: - true: Customer cannot edit the shipping address. - false (default): Customer can edit the shipping address. 

        :return: The immutable of this Ptsv2paymentreferencesOrderInformationShipTo.
        :rtype: str
        """
        return self._immutable

    @immutable.setter
    def immutable(self, immutable):
        """
        Sets the immutable of this Ptsv2paymentreferencesOrderInformationShipTo.
        Indicates whether customers are permitted to edit the shipping address in their PayPal account. Possible values: - true: Customer cannot edit the shipping address. - false (default): Customer can edit the shipping address. 

        :param immutable: The immutable of this Ptsv2paymentreferencesOrderInformationShipTo.
        :type: str
        """

        self._immutable = immutable

    @property
    def not_applicable(self):
        """
        Gets the not_applicable of this Ptsv2paymentreferencesOrderInformationShipTo.
        Indicates whether the shipping address is displayed to the customer in their PayPal account. Possible values: - true: Shipping address is not displayed. - false (default): Shipping address is displayed. For example, for digital downloads and services in which a shipping address is not required, set the value to true. 

        :return: The not_applicable of this Ptsv2paymentreferencesOrderInformationShipTo.
        :rtype: str
        """
        return self._not_applicable

    @not_applicable.setter
    def not_applicable(self, not_applicable):
        """
        Sets the not_applicable of this Ptsv2paymentreferencesOrderInformationShipTo.
        Indicates whether the shipping address is displayed to the customer in their PayPal account. Possible values: - true: Shipping address is not displayed. - false (default): Shipping address is displayed. For example, for digital downloads and services in which a shipping address is not required, set the value to true. 

        :param not_applicable: The not_applicable of this Ptsv2paymentreferencesOrderInformationShipTo.
        :type: str
        """

        self._not_applicable = not_applicable

    @property
    def county(self):
        """
        Gets the county of this Ptsv2paymentreferencesOrderInformationShipTo.
        U.S. county if available.

        :return: The county of this Ptsv2paymentreferencesOrderInformationShipTo.
        :rtype: str
        """
        return self._county

    @county.setter
    def county(self, county):
        """
        Sets the county of this Ptsv2paymentreferencesOrderInformationShipTo.
        U.S. county if available.

        :param county: The county of this Ptsv2paymentreferencesOrderInformationShipTo.
        :type: str
        """

        self._county = county

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, Ptsv2paymentreferencesOrderInformationShipTo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
