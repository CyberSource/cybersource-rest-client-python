# coding: utf-8

"""
    CyberSource Merged Spec

    All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
from six import iteritems
import re


class UnderwritingConfiguration(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'client_reference_information': 'UnderwritingConfigurationClientReferenceInformation',
        'merchant_application': 'UnderwritingConfigurationMerchantApplication',
        'metadata': 'object',
        'metadata_external': 'object',
        'organization_information': 'UnderwritingConfigurationOrganizationInformation',
        'device_information': 'UnderwritingConfigurationDeviceInformation',
        'deposit_information': 'UnderwritingConfigurationDepositInformation',
        'billing_information': 'UnderwritingConfigurationBillingInformation',
        'sale_representative_information': 'UnderwritingConfigurationSaleRepresentativeInformation',
        'file_attachment_information': 'UnderwritingConfigurationFileAttachmentInformation'
    }

    attribute_map = {
        'client_reference_information': 'clientReferenceInformation',
        'merchant_application': 'merchantApplication',
        'metadata': 'metadata',
        'metadata_external': 'metadataExternal',
        'organization_information': 'organizationInformation',
        'device_information': 'deviceInformation',
        'deposit_information': 'depositInformation',
        'billing_information': 'billingInformation',
        'sale_representative_information': 'saleRepresentativeInformation',
        'file_attachment_information': 'fileAttachmentInformation'
    }

    def __init__(self, client_reference_information=None, merchant_application=None, metadata=None, metadata_external=None, organization_information=None, device_information=None, deposit_information=None, billing_information=None, sale_representative_information=None, file_attachment_information=None):
        """
        UnderwritingConfiguration - a model defined in Swagger
        """

        self._client_reference_information = None
        self._merchant_application = None
        self._metadata = None
        self._metadata_external = None
        self._organization_information = None
        self._device_information = None
        self._deposit_information = None
        self._billing_information = None
        self._sale_representative_information = None
        self._file_attachment_information = None

        if client_reference_information is not None:
          self.client_reference_information = client_reference_information
        if merchant_application is not None:
          self.merchant_application = merchant_application
        if metadata is not None:
          self.metadata = metadata
        if metadata_external is not None:
          self.metadata_external = metadata_external
        if organization_information is not None:
          self.organization_information = organization_information
        if device_information is not None:
          self.device_information = device_information
        if deposit_information is not None:
          self.deposit_information = deposit_information
        if billing_information is not None:
          self.billing_information = billing_information
        if sale_representative_information is not None:
          self.sale_representative_information = sale_representative_information
        if file_attachment_information is not None:
          self.file_attachment_information = file_attachment_information

    @property
    def client_reference_information(self):
        """
        Gets the client_reference_information of this UnderwritingConfiguration.

        :return: The client_reference_information of this UnderwritingConfiguration.
        :rtype: UnderwritingConfigurationClientReferenceInformation
        """
        return self._client_reference_information

    @client_reference_information.setter
    def client_reference_information(self, client_reference_information):
        """
        Sets the client_reference_information of this UnderwritingConfiguration.

        :param client_reference_information: The client_reference_information of this UnderwritingConfiguration.
        :type: UnderwritingConfigurationClientReferenceInformation
        """

        self._client_reference_information = client_reference_information

    @property
    def merchant_application(self):
        """
        Gets the merchant_application of this UnderwritingConfiguration.

        :return: The merchant_application of this UnderwritingConfiguration.
        :rtype: UnderwritingConfigurationMerchantApplication
        """
        return self._merchant_application

    @merchant_application.setter
    def merchant_application(self, merchant_application):
        """
        Sets the merchant_application of this UnderwritingConfiguration.

        :param merchant_application: The merchant_application of this UnderwritingConfiguration.
        :type: UnderwritingConfigurationMerchantApplication
        """

        self._merchant_application = merchant_application

    @property
    def metadata(self):
        """
        Gets the metadata of this UnderwritingConfiguration.

        :return: The metadata of this UnderwritingConfiguration.
        :rtype: object
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """
        Sets the metadata of this UnderwritingConfiguration.

        :param metadata: The metadata of this UnderwritingConfiguration.
        :type: object
        """

        self._metadata = metadata

    @property
    def metadata_external(self):
        """
        Gets the metadata_external of this UnderwritingConfiguration.

        :return: The metadata_external of this UnderwritingConfiguration.
        :rtype: object
        """
        return self._metadata_external

    @metadata_external.setter
    def metadata_external(self, metadata_external):
        """
        Sets the metadata_external of this UnderwritingConfiguration.

        :param metadata_external: The metadata_external of this UnderwritingConfiguration.
        :type: object
        """

        self._metadata_external = metadata_external

    @property
    def organization_information(self):
        """
        Gets the organization_information of this UnderwritingConfiguration.

        :return: The organization_information of this UnderwritingConfiguration.
        :rtype: UnderwritingConfigurationOrganizationInformation
        """
        return self._organization_information

    @organization_information.setter
    def organization_information(self, organization_information):
        """
        Sets the organization_information of this UnderwritingConfiguration.

        :param organization_information: The organization_information of this UnderwritingConfiguration.
        :type: UnderwritingConfigurationOrganizationInformation
        """

        self._organization_information = organization_information

    @property
    def device_information(self):
        """
        Gets the device_information of this UnderwritingConfiguration.

        :return: The device_information of this UnderwritingConfiguration.
        :rtype: UnderwritingConfigurationDeviceInformation
        """
        return self._device_information

    @device_information.setter
    def device_information(self, device_information):
        """
        Sets the device_information of this UnderwritingConfiguration.

        :param device_information: The device_information of this UnderwritingConfiguration.
        :type: UnderwritingConfigurationDeviceInformation
        """

        self._device_information = device_information

    @property
    def deposit_information(self):
        """
        Gets the deposit_information of this UnderwritingConfiguration.

        :return: The deposit_information of this UnderwritingConfiguration.
        :rtype: UnderwritingConfigurationDepositInformation
        """
        return self._deposit_information

    @deposit_information.setter
    def deposit_information(self, deposit_information):
        """
        Sets the deposit_information of this UnderwritingConfiguration.

        :param deposit_information: The deposit_information of this UnderwritingConfiguration.
        :type: UnderwritingConfigurationDepositInformation
        """

        self._deposit_information = deposit_information

    @property
    def billing_information(self):
        """
        Gets the billing_information of this UnderwritingConfiguration.

        :return: The billing_information of this UnderwritingConfiguration.
        :rtype: UnderwritingConfigurationBillingInformation
        """
        return self._billing_information

    @billing_information.setter
    def billing_information(self, billing_information):
        """
        Sets the billing_information of this UnderwritingConfiguration.

        :param billing_information: The billing_information of this UnderwritingConfiguration.
        :type: UnderwritingConfigurationBillingInformation
        """

        self._billing_information = billing_information

    @property
    def sale_representative_information(self):
        """
        Gets the sale_representative_information of this UnderwritingConfiguration.

        :return: The sale_representative_information of this UnderwritingConfiguration.
        :rtype: UnderwritingConfigurationSaleRepresentativeInformation
        """
        return self._sale_representative_information

    @sale_representative_information.setter
    def sale_representative_information(self, sale_representative_information):
        """
        Sets the sale_representative_information of this UnderwritingConfiguration.

        :param sale_representative_information: The sale_representative_information of this UnderwritingConfiguration.
        :type: UnderwritingConfigurationSaleRepresentativeInformation
        """

        self._sale_representative_information = sale_representative_information

    @property
    def file_attachment_information(self):
        """
        Gets the file_attachment_information of this UnderwritingConfiguration.

        :return: The file_attachment_information of this UnderwritingConfiguration.
        :rtype: UnderwritingConfigurationFileAttachmentInformation
        """
        return self._file_attachment_information

    @file_attachment_information.setter
    def file_attachment_information(self, file_attachment_information):
        """
        Sets the file_attachment_information of this UnderwritingConfiguration.

        :param file_attachment_information: The file_attachment_information of this UnderwritingConfiguration.
        :type: UnderwritingConfigurationFileAttachmentInformation
        """

        self._file_attachment_information = file_attachment_information

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, UnderwritingConfiguration):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
