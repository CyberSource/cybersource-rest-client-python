# coding: utf-8

"""
    CyberSource Merged Spec

    All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
from six import iteritems
import re


class VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'display_card_verification_value': 'list[str]',
        'require_card_verification_value': 'list[str]',
        'accepted_card_types': 'list[str]',
        'display_credit_cards': 'bool',
        'display_echecks': 'bool',
        'display_debt_indicator': 'bool',
        'display_bill_payment': 'bool',
        'enable_echecks': 'bool',
        'display_ignore_e_check_avs_checkbox': 'bool',
        'first_name_required': 'bool',
        'last_name_required': 'bool',
        'display_first_name': 'bool',
        'display_last_name': 'bool'
    }

    attribute_map = {
        'display_card_verification_value': 'displayCardVerificationValue',
        'require_card_verification_value': 'requireCardVerificationValue',
        'accepted_card_types': 'acceptedCardTypes',
        'display_credit_cards': 'displayCreditCards',
        'display_echecks': 'displayEchecks',
        'display_debt_indicator': 'displayDebtIndicator',
        'display_bill_payment': 'displayBillPayment',
        'enable_echecks': 'enableEchecks',
        'display_ignore_e_check_avs_checkbox': 'displayIgnoreECheckAvsCheckbox',
        'first_name_required': 'firstNameRequired',
        'last_name_required': 'lastNameRequired',
        'display_first_name': 'displayFirstName',
        'display_last_name': 'displayLastName'
    }

    def __init__(self, display_card_verification_value=None, require_card_verification_value=None, accepted_card_types=None, display_credit_cards=None, display_echecks=None, display_debt_indicator=None, display_bill_payment=None, enable_echecks=None, display_ignore_e_check_avs_checkbox=None, first_name_required=None, last_name_required=None, display_first_name=None, display_last_name=None):
        """
        VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation - a model defined in Swagger
        """

        self._display_card_verification_value = None
        self._require_card_verification_value = None
        self._accepted_card_types = None
        self._display_credit_cards = None
        self._display_echecks = None
        self._display_debt_indicator = None
        self._display_bill_payment = None
        self._enable_echecks = None
        self._display_ignore_e_check_avs_checkbox = None
        self._first_name_required = None
        self._last_name_required = None
        self._display_first_name = None
        self._display_last_name = None

        if display_card_verification_value is not None:
          self.display_card_verification_value = display_card_verification_value
        if require_card_verification_value is not None:
          self.require_card_verification_value = require_card_verification_value
        if accepted_card_types is not None:
          self.accepted_card_types = accepted_card_types
        if display_credit_cards is not None:
          self.display_credit_cards = display_credit_cards
        if display_echecks is not None:
          self.display_echecks = display_echecks
        if display_debt_indicator is not None:
          self.display_debt_indicator = display_debt_indicator
        if display_bill_payment is not None:
          self.display_bill_payment = display_bill_payment
        if enable_echecks is not None:
          self.enable_echecks = enable_echecks
        if display_ignore_e_check_avs_checkbox is not None:
          self.display_ignore_e_check_avs_checkbox = display_ignore_e_check_avs_checkbox
        if first_name_required is not None:
          self.first_name_required = first_name_required
        if last_name_required is not None:
          self.last_name_required = last_name_required
        if display_first_name is not None:
          self.display_first_name = display_first_name
        if display_last_name is not None:
          self.display_last_name = display_last_name

    @property
    def display_card_verification_value(self):
        """
        Gets the display_card_verification_value of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :return: The display_card_verification_value of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :rtype: list[str]
        """
        return self._display_card_verification_value

    @display_card_verification_value.setter
    def display_card_verification_value(self, display_card_verification_value):
        """
        Sets the display_card_verification_value of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :param display_card_verification_value: The display_card_verification_value of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :type: list[str]
        """

        self._display_card_verification_value = display_card_verification_value

    @property
    def require_card_verification_value(self):
        """
        Gets the require_card_verification_value of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :return: The require_card_verification_value of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :rtype: list[str]
        """
        return self._require_card_verification_value

    @require_card_verification_value.setter
    def require_card_verification_value(self, require_card_verification_value):
        """
        Sets the require_card_verification_value of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :param require_card_verification_value: The require_card_verification_value of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :type: list[str]
        """

        self._require_card_verification_value = require_card_verification_value

    @property
    def accepted_card_types(self):
        """
        Gets the accepted_card_types of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :return: The accepted_card_types of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :rtype: list[str]
        """
        return self._accepted_card_types

    @accepted_card_types.setter
    def accepted_card_types(self, accepted_card_types):
        """
        Sets the accepted_card_types of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :param accepted_card_types: The accepted_card_types of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :type: list[str]
        """

        self._accepted_card_types = accepted_card_types

    @property
    def display_credit_cards(self):
        """
        Gets the display_credit_cards of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :return: The display_credit_cards of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :rtype: bool
        """
        return self._display_credit_cards

    @display_credit_cards.setter
    def display_credit_cards(self, display_credit_cards):
        """
        Sets the display_credit_cards of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :param display_credit_cards: The display_credit_cards of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :type: bool
        """

        self._display_credit_cards = display_credit_cards

    @property
    def display_echecks(self):
        """
        Gets the display_echecks of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :return: The display_echecks of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :rtype: bool
        """
        return self._display_echecks

    @display_echecks.setter
    def display_echecks(self, display_echecks):
        """
        Sets the display_echecks of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :param display_echecks: The display_echecks of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :type: bool
        """

        self._display_echecks = display_echecks

    @property
    def display_debt_indicator(self):
        """
        Gets the display_debt_indicator of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :return: The display_debt_indicator of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :rtype: bool
        """
        return self._display_debt_indicator

    @display_debt_indicator.setter
    def display_debt_indicator(self, display_debt_indicator):
        """
        Sets the display_debt_indicator of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :param display_debt_indicator: The display_debt_indicator of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :type: bool
        """

        self._display_debt_indicator = display_debt_indicator

    @property
    def display_bill_payment(self):
        """
        Gets the display_bill_payment of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :return: The display_bill_payment of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :rtype: bool
        """
        return self._display_bill_payment

    @display_bill_payment.setter
    def display_bill_payment(self, display_bill_payment):
        """
        Sets the display_bill_payment of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :param display_bill_payment: The display_bill_payment of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :type: bool
        """

        self._display_bill_payment = display_bill_payment

    @property
    def enable_echecks(self):
        """
        Gets the enable_echecks of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :return: The enable_echecks of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :rtype: bool
        """
        return self._enable_echecks

    @enable_echecks.setter
    def enable_echecks(self, enable_echecks):
        """
        Sets the enable_echecks of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :param enable_echecks: The enable_echecks of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :type: bool
        """

        self._enable_echecks = enable_echecks

    @property
    def display_ignore_e_check_avs_checkbox(self):
        """
        Gets the display_ignore_e_check_avs_checkbox of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :return: The display_ignore_e_check_avs_checkbox of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :rtype: bool
        """
        return self._display_ignore_e_check_avs_checkbox

    @display_ignore_e_check_avs_checkbox.setter
    def display_ignore_e_check_avs_checkbox(self, display_ignore_e_check_avs_checkbox):
        """
        Sets the display_ignore_e_check_avs_checkbox of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :param display_ignore_e_check_avs_checkbox: The display_ignore_e_check_avs_checkbox of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :type: bool
        """

        self._display_ignore_e_check_avs_checkbox = display_ignore_e_check_avs_checkbox

    @property
    def first_name_required(self):
        """
        Gets the first_name_required of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :return: The first_name_required of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :rtype: bool
        """
        return self._first_name_required

    @first_name_required.setter
    def first_name_required(self, first_name_required):
        """
        Sets the first_name_required of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :param first_name_required: The first_name_required of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :type: bool
        """

        self._first_name_required = first_name_required

    @property
    def last_name_required(self):
        """
        Gets the last_name_required of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :return: The last_name_required of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :rtype: bool
        """
        return self._last_name_required

    @last_name_required.setter
    def last_name_required(self, last_name_required):
        """
        Sets the last_name_required of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :param last_name_required: The last_name_required of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :type: bool
        """

        self._last_name_required = last_name_required

    @property
    def display_first_name(self):
        """
        Gets the display_first_name of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :return: The display_first_name of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :rtype: bool
        """
        return self._display_first_name

    @display_first_name.setter
    def display_first_name(self, display_first_name):
        """
        Sets the display_first_name of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :param display_first_name: The display_first_name of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :type: bool
        """

        self._display_first_name = display_first_name

    @property
    def display_last_name(self):
        """
        Gets the display_last_name of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :return: The display_last_name of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :rtype: bool
        """
        return self._display_last_name

    @display_last_name.setter
    def display_last_name(self, display_last_name):
        """
        Sets the display_last_name of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.

        :param display_last_name: The display_last_name of this VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation.
        :type: bool
        """

        self._display_last_name = display_last_name

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, VTConfigCardNotPresentGlobalPaymentInformationPaymentInformation):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
