# coding: utf-8

"""
    CyberSource Flex API

    Simple PAN tokenization service

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class InlineResponse2017EmbeddedRiskInformationProvidersFingerprint(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'true_ipaddress': 'str',
        'hash': 'str',
        'smart_id': 'str'
    }

    attribute_map = {
        'true_ipaddress': 'true_ipaddress',
        'hash': 'hash',
        'smart_id': 'smartId'
    }

    def __init__(self, true_ipaddress=None, hash=None, smart_id=None):
        """
        InlineResponse2017EmbeddedRiskInformationProvidersFingerprint - a model defined in Swagger
        """

        self._true_ipaddress = None
        self._hash = None
        self._smart_id = None

        if true_ipaddress is not None:
          self.true_ipaddress = true_ipaddress
        if hash is not None:
          self.hash = hash
        if smart_id is not None:
          self.smart_id = smart_id

    @property
    def true_ipaddress(self):
        """
        Gets the true_ipaddress of this InlineResponse2017EmbeddedRiskInformationProvidersFingerprint.
        The description for this field is not available.

        :return: The true_ipaddress of this InlineResponse2017EmbeddedRiskInformationProvidersFingerprint.
        :rtype: str
        """
        return self._true_ipaddress

    @true_ipaddress.setter
    def true_ipaddress(self, true_ipaddress):
        """
        Sets the true_ipaddress of this InlineResponse2017EmbeddedRiskInformationProvidersFingerprint.
        The description for this field is not available.

        :param true_ipaddress: The true_ipaddress of this InlineResponse2017EmbeddedRiskInformationProvidersFingerprint.
        :type: str
        """
        if true_ipaddress is not None and len(true_ipaddress) > 255:
            raise ValueError("Invalid value for `true_ipaddress`, length must be less than or equal to `255`")

        self._true_ipaddress = true_ipaddress

    @property
    def hash(self):
        """
        Gets the hash of this InlineResponse2017EmbeddedRiskInformationProvidersFingerprint.
        The description for this field is not available.

        :return: The hash of this InlineResponse2017EmbeddedRiskInformationProvidersFingerprint.
        :rtype: str
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """
        Sets the hash of this InlineResponse2017EmbeddedRiskInformationProvidersFingerprint.
        The description for this field is not available.

        :param hash: The hash of this InlineResponse2017EmbeddedRiskInformationProvidersFingerprint.
        :type: str
        """
        if hash is not None and len(hash) > 255:
            raise ValueError("Invalid value for `hash`, length must be less than or equal to `255`")

        self._hash = hash

    @property
    def smart_id(self):
        """
        Gets the smart_id of this InlineResponse2017EmbeddedRiskInformationProvidersFingerprint.
        The description for this field is not available.

        :return: The smart_id of this InlineResponse2017EmbeddedRiskInformationProvidersFingerprint.
        :rtype: str
        """
        return self._smart_id

    @smart_id.setter
    def smart_id(self, smart_id):
        """
        Sets the smart_id of this InlineResponse2017EmbeddedRiskInformationProvidersFingerprint.
        The description for this field is not available.

        :param smart_id: The smart_id of this InlineResponse2017EmbeddedRiskInformationProvidersFingerprint.
        :type: str
        """
        if smart_id is not None and len(smart_id) > 255:
            raise ValueError("Invalid value for `smart_id`, length must be less than or equal to `255`")

        self._smart_id = smart_id

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, InlineResponse2017EmbeddedRiskInformationProvidersFingerprint):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
