# coding: utf-8

"""
    CyberSource Merged Spec

    All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class Boardingv1registrationsProductInformationSelectedProductsPaymentsECheckConfigurationInformationConfigurationsCommonInternalOnly(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'display_echeck_info': 'bool',
        'processors': 'dict(str, Boardingv1registrationsProductInformationSelectedProductsPaymentsECheckConfigurationInformationConfigurationsCommonInternalOnlyProcessors)'
    }

    attribute_map = {
        'display_echeck_info': 'displayEcheckInfo',
        'processors': 'processors'
    }

    def __init__(self, display_echeck_info=True, processors=None):
        """
        Boardingv1registrationsProductInformationSelectedProductsPaymentsECheckConfigurationInformationConfigurationsCommonInternalOnly - a model defined in Swagger
        """

        self._display_echeck_info = None
        self._processors = None

        if display_echeck_info is not None:
          self.display_echeck_info = display_echeck_info
        if processors is not None:
          self.processors = processors

    @property
    def display_echeck_info(self):
        """
        Gets the display_echeck_info of this Boardingv1registrationsProductInformationSelectedProductsPaymentsECheckConfigurationInformationConfigurationsCommonInternalOnly.
        *NEW* Used by EBC UI always set to true

        :return: The display_echeck_info of this Boardingv1registrationsProductInformationSelectedProductsPaymentsECheckConfigurationInformationConfigurationsCommonInternalOnly.
        :rtype: bool
        """
        return self._display_echeck_info

    @display_echeck_info.setter
    def display_echeck_info(self, display_echeck_info):
        """
        Sets the display_echeck_info of this Boardingv1registrationsProductInformationSelectedProductsPaymentsECheckConfigurationInformationConfigurationsCommonInternalOnly.
        *NEW* Used by EBC UI always set to true

        :param display_echeck_info: The display_echeck_info of this Boardingv1registrationsProductInformationSelectedProductsPaymentsECheckConfigurationInformationConfigurationsCommonInternalOnly.
        :type: bool
        """

        self._display_echeck_info = display_echeck_info

    @property
    def processors(self):
        """
        Gets the processors of this Boardingv1registrationsProductInformationSelectedProductsPaymentsECheckConfigurationInformationConfigurationsCommonInternalOnly.
        *NEW* Payment Processing connection used to support eCheck, aka ACH, payment methods. Example * \"bofaach\" * \"wellsfargoach\" 

        :return: The processors of this Boardingv1registrationsProductInformationSelectedProductsPaymentsECheckConfigurationInformationConfigurationsCommonInternalOnly.
        :rtype: dict(str, Boardingv1registrationsProductInformationSelectedProductsPaymentsECheckConfigurationInformationConfigurationsCommonInternalOnlyProcessors)
        """
        return self._processors

    @processors.setter
    def processors(self, processors):
        """
        Sets the processors of this Boardingv1registrationsProductInformationSelectedProductsPaymentsECheckConfigurationInformationConfigurationsCommonInternalOnly.
        *NEW* Payment Processing connection used to support eCheck, aka ACH, payment methods. Example * \"bofaach\" * \"wellsfargoach\" 

        :param processors: The processors of this Boardingv1registrationsProductInformationSelectedProductsPaymentsECheckConfigurationInformationConfigurationsCommonInternalOnly.
        :type: dict(str, Boardingv1registrationsProductInformationSelectedProductsPaymentsECheckConfigurationInformationConfigurationsCommonInternalOnlyProcessors)
        """

        self._processors = processors

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, Boardingv1registrationsProductInformationSelectedProductsPaymentsECheckConfigurationInformationConfigurationsCommonInternalOnly):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
