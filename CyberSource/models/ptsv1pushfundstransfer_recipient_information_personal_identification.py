# coding: utf-8

"""
    CyberSource Merged Spec

    All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
from six import iteritems
import re


class Ptsv1pushfundstransferRecipientInformationPersonalIdentification(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'type': 'str',
        'issuing_country': 'str',
        'personal_id_type': 'str'
    }

    attribute_map = {
        'id': 'id',
        'type': 'type',
        'issuing_country': 'issuingCountry',
        'personal_id_type': 'personalIdType'
    }

    def __init__(self, id=None, type=None, issuing_country=None, personal_id_type=None):
        """
        Ptsv1pushfundstransferRecipientInformationPersonalIdentification - a model defined in Swagger
        """

        self._id = None
        self._type = None
        self._issuing_country = None
        self._personal_id_type = None

        if id is not None:
          self.id = id
        if type is not None:
          self.type = type
        if issuing_country is not None:
          self.issuing_country = issuing_country
        if personal_id_type is not None:
          self.personal_id_type = personal_id_type

    @property
    def id(self):
        """
        Gets the id of this Ptsv1pushfundstransferRecipientInformationPersonalIdentification.
        The ID number/value. Processor(35) 

        :return: The id of this Ptsv1pushfundstransferRecipientInformationPersonalIdentification.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this Ptsv1pushfundstransferRecipientInformationPersonalIdentification.
        The ID number/value. Processor(35) 

        :param id: The id of this Ptsv1pushfundstransferRecipientInformationPersonalIdentification.
        :type: str
        """

        self._id = id

    @property
    def type(self):
        """
        Gets the type of this Ptsv1pushfundstransferRecipientInformationPersonalIdentification.
        This tag will contain the type of sender identification. The valid values are: - `BTHD`: (Date of birth) - `CUID`: (Customer identification (unspecified)) - `NTID`: (National identification) - `PASN`: (Passport number) - `DRLN`: (Driver license) - `TXIN`: (Tax identification) - `CPNY`: (Company registration number) - `PRXY`: (Proxy identification) - `SSNB`: (Social security number) - `ARNB`: (Alien registration number) - `LAWE`: (Law enforcement identification) - `MILI`: (Military identification) - `TRVL`: (Travel identification (non-passport)) - `EMAL`: (Email) - `PHON`: (Phone number) 

        :return: The type of this Ptsv1pushfundstransferRecipientInformationPersonalIdentification.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """
        Sets the type of this Ptsv1pushfundstransferRecipientInformationPersonalIdentification.
        This tag will contain the type of sender identification. The valid values are: - `BTHD`: (Date of birth) - `CUID`: (Customer identification (unspecified)) - `NTID`: (National identification) - `PASN`: (Passport number) - `DRLN`: (Driver license) - `TXIN`: (Tax identification) - `CPNY`: (Company registration number) - `PRXY`: (Proxy identification) - `SSNB`: (Social security number) - `ARNB`: (Alien registration number) - `LAWE`: (Law enforcement identification) - `MILI`: (Military identification) - `TRVL`: (Travel identification (non-passport)) - `EMAL`: (Email) - `PHON`: (Phone number) 

        :param type: The type of this Ptsv1pushfundstransferRecipientInformationPersonalIdentification.
        :type: str
        """

        self._type = type

    @property
    def issuing_country(self):
        """
        Gets the issuing_country of this Ptsv1pushfundstransferRecipientInformationPersonalIdentification.
        Issuing country of the identification. The field format should be a 2 character ISO 3166-1 alpha-2 country code. 

        :return: The issuing_country of this Ptsv1pushfundstransferRecipientInformationPersonalIdentification.
        :rtype: str
        """
        return self._issuing_country

    @issuing_country.setter
    def issuing_country(self, issuing_country):
        """
        Sets the issuing_country of this Ptsv1pushfundstransferRecipientInformationPersonalIdentification.
        Issuing country of the identification. The field format should be a 2 character ISO 3166-1 alpha-2 country code. 

        :param issuing_country: The issuing_country of this Ptsv1pushfundstransferRecipientInformationPersonalIdentification.
        :type: str
        """

        self._issuing_country = issuing_country

    @property
    def personal_id_type(self):
        """
        Gets the personal_id_type of this Ptsv1pushfundstransferRecipientInformationPersonalIdentification.
        This tag will denote whether the tax ID is a business or individual tax ID when personal ID Type contains the value of TXIN (Tax identification).  The valid values are:  - `B` (Business) - `I` (Individual) 

        :return: The personal_id_type of this Ptsv1pushfundstransferRecipientInformationPersonalIdentification.
        :rtype: str
        """
        return self._personal_id_type

    @personal_id_type.setter
    def personal_id_type(self, personal_id_type):
        """
        Sets the personal_id_type of this Ptsv1pushfundstransferRecipientInformationPersonalIdentification.
        This tag will denote whether the tax ID is a business or individual tax ID when personal ID Type contains the value of TXIN (Tax identification).  The valid values are:  - `B` (Business) - `I` (Individual) 

        :param personal_id_type: The personal_id_type of this Ptsv1pushfundstransferRecipientInformationPersonalIdentification.
        :type: str
        """

        self._personal_id_type = personal_id_type

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, Ptsv1pushfundstransferRecipientInformationPersonalIdentification):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
