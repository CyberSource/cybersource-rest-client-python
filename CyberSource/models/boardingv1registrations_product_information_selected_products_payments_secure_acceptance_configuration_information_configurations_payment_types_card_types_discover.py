# coding: utf-8

"""
    CyberSource Merged Spec

    All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'card_verification_number_supported': 'bool',
        'card_verification_number_display': 'bool',
        'payer_authentication_supported': 'bool',
        'supported_currencies': 'list[str]',
        'method': 'str',
        'card_verification_number_required': 'bool',
        'payer_authentication_enabled': 'bool'
    }

    attribute_map = {
        'card_verification_number_supported': 'cardVerificationNumberSupported',
        'card_verification_number_display': 'cardVerificationNumberDisplay',
        'payer_authentication_supported': 'payerAuthenticationSupported',
        'supported_currencies': 'supportedCurrencies',
        'method': 'method',
        'card_verification_number_required': 'cardVerificationNumberRequired',
        'payer_authentication_enabled': 'payerAuthenticationEnabled'
    }

    def __init__(self, card_verification_number_supported=None, card_verification_number_display=None, payer_authentication_supported=None, supported_currencies=None, method=None, card_verification_number_required=None, payer_authentication_enabled=None):
        """
        Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover - a model defined in Swagger
        """

        self._card_verification_number_supported = None
        self._card_verification_number_display = None
        self._payer_authentication_supported = None
        self._supported_currencies = None
        self._method = None
        self._card_verification_number_required = None
        self._payer_authentication_enabled = None

        if card_verification_number_supported is not None:
          self.card_verification_number_supported = card_verification_number_supported
        if card_verification_number_display is not None:
          self.card_verification_number_display = card_verification_number_display
        if payer_authentication_supported is not None:
          self.payer_authentication_supported = payer_authentication_supported
        if supported_currencies is not None:
          self.supported_currencies = supported_currencies
        if method is not None:
          self.method = method
        if card_verification_number_required is not None:
          self.card_verification_number_required = card_verification_number_required
        if payer_authentication_enabled is not None:
          self.payer_authentication_enabled = payer_authentication_enabled

    @property
    def card_verification_number_supported(self):
        """
        Gets the card_verification_number_supported of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        Dictates whether or Card Verification Number is supported by the card type. Usually this is set at system level.

        :return: The card_verification_number_supported of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        :rtype: bool
        """
        return self._card_verification_number_supported

    @card_verification_number_supported.setter
    def card_verification_number_supported(self, card_verification_number_supported):
        """
        Sets the card_verification_number_supported of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        Dictates whether or Card Verification Number is supported by the card type. Usually this is set at system level.

        :param card_verification_number_supported: The card_verification_number_supported of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        :type: bool
        """

        self._card_verification_number_supported = card_verification_number_supported

    @property
    def card_verification_number_display(self):
        """
        Gets the card_verification_number_display of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        Toggles whether or Card Verification Number is displayed on the Hosted Checkout.

        :return: The card_verification_number_display of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        :rtype: bool
        """
        return self._card_verification_number_display

    @card_verification_number_display.setter
    def card_verification_number_display(self, card_verification_number_display):
        """
        Sets the card_verification_number_display of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        Toggles whether or Card Verification Number is displayed on the Hosted Checkout.

        :param card_verification_number_display: The card_verification_number_display of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        :type: bool
        """

        self._card_verification_number_display = card_verification_number_display

    @property
    def payer_authentication_supported(self):
        """
        Gets the payer_authentication_supported of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        Dictates whether or Payer Authentication is supported by the card type. Usually this is set at system level.

        :return: The payer_authentication_supported of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        :rtype: bool
        """
        return self._payer_authentication_supported

    @payer_authentication_supported.setter
    def payer_authentication_supported(self, payer_authentication_supported):
        """
        Sets the payer_authentication_supported of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        Dictates whether or Payer Authentication is supported by the card type. Usually this is set at system level.

        :param payer_authentication_supported: The payer_authentication_supported of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        :type: bool
        """

        self._payer_authentication_supported = payer_authentication_supported

    @property
    def supported_currencies(self):
        """
        Gets the supported_currencies of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        Array of the supported  ISO 4217 alphabetic currency codes.

        :return: The supported_currencies of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        :rtype: list[str]
        """
        return self._supported_currencies

    @supported_currencies.setter
    def supported_currencies(self, supported_currencies):
        """
        Sets the supported_currencies of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        Array of the supported  ISO 4217 alphabetic currency codes.

        :param supported_currencies: The supported_currencies of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        :type: list[str]
        """

        self._supported_currencies = supported_currencies

    @property
    def method(self):
        """
        Gets the method of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.

        :return: The method of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        :rtype: str
        """
        return self._method

    @method.setter
    def method(self, method):
        """
        Sets the method of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.

        :param method: The method of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        :type: str
        """

        self._method = method

    @property
    def card_verification_number_required(self):
        """
        Gets the card_verification_number_required of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.

        :return: The card_verification_number_required of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        :rtype: bool
        """
        return self._card_verification_number_required

    @card_verification_number_required.setter
    def card_verification_number_required(self, card_verification_number_required):
        """
        Sets the card_verification_number_required of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.

        :param card_verification_number_required: The card_verification_number_required of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        :type: bool
        """

        self._card_verification_number_required = card_verification_number_required

    @property
    def payer_authentication_enabled(self):
        """
        Gets the payer_authentication_enabled of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.

        :return: The payer_authentication_enabled of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        :rtype: bool
        """
        return self._payer_authentication_enabled

    @payer_authentication_enabled.setter
    def payer_authentication_enabled(self, payer_authentication_enabled):
        """
        Sets the payer_authentication_enabled of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.

        :param payer_authentication_enabled: The payer_authentication_enabled of this Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover.
        :type: bool
        """

        self._payer_authentication_enabled = payer_authentication_enabled

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, Boardingv1registrationsProductInformationSelectedProductsPaymentsSecureAcceptanceConfigurationInformationConfigurationsPaymentTypesCardTypesDiscover):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
