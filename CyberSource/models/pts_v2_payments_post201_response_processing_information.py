# coding: utf-8

"""
    CyberSource Merged Spec

    All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
from six import iteritems
import re


class PtsV2PaymentsPost201ResponseProcessingInformation(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'bank_transfer_options': 'PtsV2PaymentsPost201ResponseProcessingInformationBankTransferOptions',
        'payment_solution': 'str',
        'enhanced_data_enabled': 'bool'
    }

    attribute_map = {
        'bank_transfer_options': 'bankTransferOptions',
        'payment_solution': 'paymentSolution',
        'enhanced_data_enabled': 'enhancedDataEnabled'
    }

    def __init__(self, bank_transfer_options=None, payment_solution=None, enhanced_data_enabled=None):
        """
        PtsV2PaymentsPost201ResponseProcessingInformation - a model defined in Swagger
        """

        self._bank_transfer_options = None
        self._payment_solution = None
        self._enhanced_data_enabled = None

        if bank_transfer_options is not None:
          self.bank_transfer_options = bank_transfer_options
        if payment_solution is not None:
          self.payment_solution = payment_solution
        if enhanced_data_enabled is not None:
          self.enhanced_data_enabled = enhanced_data_enabled

    @property
    def bank_transfer_options(self):
        """
        Gets the bank_transfer_options of this PtsV2PaymentsPost201ResponseProcessingInformation.

        :return: The bank_transfer_options of this PtsV2PaymentsPost201ResponseProcessingInformation.
        :rtype: PtsV2PaymentsPost201ResponseProcessingInformationBankTransferOptions
        """
        return self._bank_transfer_options

    @bank_transfer_options.setter
    def bank_transfer_options(self, bank_transfer_options):
        """
        Sets the bank_transfer_options of this PtsV2PaymentsPost201ResponseProcessingInformation.

        :param bank_transfer_options: The bank_transfer_options of this PtsV2PaymentsPost201ResponseProcessingInformation.
        :type: PtsV2PaymentsPost201ResponseProcessingInformationBankTransferOptions
        """

        self._bank_transfer_options = bank_transfer_options

    @property
    def payment_solution(self):
        """
        Gets the payment_solution of this PtsV2PaymentsPost201ResponseProcessingInformation.
        Type of digital payment solution for the transaction. Possible Values:   - `visacheckout`: Visa Checkout. This value is required for Visa Checkout transactions. For details, see `payment_solution` field description in [Visa Checkout Using the REST API.](https://developer.cybersource.com/content/dam/docs/cybs/en-us/apifields/reference/all/rest/api-fields.pdf)  - `001`: Apple Pay.  - `004`: Cybersource In-App Solution.  - `005`: Masterpass. This value is required for Masterpass transactions on OmniPay Direct.   - `006`: Android Pay.  - `007`: Chase Pay.  - `008`: Samsung Pay.  - `012`: Google Pay.  - `013`: Cybersource P2PE Decryption  - `014`: Mastercard credential on file (COF) payment network token. Returned in authorizations that use a payment network token associated with a TMS token.  - `015`: Visa credential on file (COF) payment network token. Returned in authorizations that use a payment network token associated with a TMS token.  - `027`: Click to Pay. 

        :return: The payment_solution of this PtsV2PaymentsPost201ResponseProcessingInformation.
        :rtype: str
        """
        return self._payment_solution

    @payment_solution.setter
    def payment_solution(self, payment_solution):
        """
        Sets the payment_solution of this PtsV2PaymentsPost201ResponseProcessingInformation.
        Type of digital payment solution for the transaction. Possible Values:   - `visacheckout`: Visa Checkout. This value is required for Visa Checkout transactions. For details, see `payment_solution` field description in [Visa Checkout Using the REST API.](https://developer.cybersource.com/content/dam/docs/cybs/en-us/apifields/reference/all/rest/api-fields.pdf)  - `001`: Apple Pay.  - `004`: Cybersource In-App Solution.  - `005`: Masterpass. This value is required for Masterpass transactions on OmniPay Direct.   - `006`: Android Pay.  - `007`: Chase Pay.  - `008`: Samsung Pay.  - `012`: Google Pay.  - `013`: Cybersource P2PE Decryption  - `014`: Mastercard credential on file (COF) payment network token. Returned in authorizations that use a payment network token associated with a TMS token.  - `015`: Visa credential on file (COF) payment network token. Returned in authorizations that use a payment network token associated with a TMS token.  - `027`: Click to Pay. 

        :param payment_solution: The payment_solution of this PtsV2PaymentsPost201ResponseProcessingInformation.
        :type: str
        """

        self._payment_solution = payment_solution

    @property
    def enhanced_data_enabled(self):
        """
        Gets the enhanced_data_enabled of this PtsV2PaymentsPost201ResponseProcessingInformation.
        The possible values for the reply field are: - `true` : the airline data was included in the request to the processor. - `false` : the airline data was not included in the request to the processor.  Returned by authorization, capture, or credit services. 

        :return: The enhanced_data_enabled of this PtsV2PaymentsPost201ResponseProcessingInformation.
        :rtype: bool
        """
        return self._enhanced_data_enabled

    @enhanced_data_enabled.setter
    def enhanced_data_enabled(self, enhanced_data_enabled):
        """
        Sets the enhanced_data_enabled of this PtsV2PaymentsPost201ResponseProcessingInformation.
        The possible values for the reply field are: - `true` : the airline data was included in the request to the processor. - `false` : the airline data was not included in the request to the processor.  Returned by authorization, capture, or credit services. 

        :param enhanced_data_enabled: The enhanced_data_enabled of this PtsV2PaymentsPost201ResponseProcessingInformation.
        :type: bool
        """

        self._enhanced_data_enabled = enhanced_data_enabled

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, PtsV2PaymentsPost201ResponseProcessingInformation):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
