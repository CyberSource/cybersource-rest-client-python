# coding: utf-8

"""
    CyberSource Merged Spec

    All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
from six import iteritems
import re


class InlineResponse4011(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'links': 'InlineResponse4011Links',
        'code': 'str',
        'correlation_id': 'str',
        'detail': 'str',
        'fields': 'list[InlineResponse4011Fields]',
        'localization_key': 'str',
        'message': 'str'
    }

    attribute_map = {
        'links': '_links',
        'code': 'code',
        'correlation_id': 'correlationId',
        'detail': 'detail',
        'fields': 'fields',
        'localization_key': 'localizationKey',
        'message': 'message'
    }

    def __init__(self, links=None, code=None, correlation_id=None, detail=None, fields=None, localization_key=None, message=None):
        """
        InlineResponse4011 - a model defined in Swagger
        """

        self._links = None
        self._code = None
        self._correlation_id = None
        self._detail = None
        self._fields = None
        self._localization_key = None
        self._message = None

        if links is not None:
          self.links = links
        if code is not None:
          self.code = code
        if correlation_id is not None:
          self.correlation_id = correlation_id
        if detail is not None:
          self.detail = detail
        if fields is not None:
          self.fields = fields
        if localization_key is not None:
          self.localization_key = localization_key
        if message is not None:
          self.message = message

    @property
    def links(self):
        """
        Gets the links of this InlineResponse4011.

        :return: The links of this InlineResponse4011.
        :rtype: InlineResponse4011Links
        """
        return self._links

    @links.setter
    def links(self, links):
        """
        Sets the links of this InlineResponse4011.

        :param links: The links of this InlineResponse4011.
        :type: InlineResponse4011Links
        """

        self._links = links

    @property
    def code(self):
        """
        Gets the code of this InlineResponse4011.
        Valid Values:   * FORBIDDEN_RESPONSE   * VALIDATION_ERROR   * UNSUPPORTED_MEDIA_TYPE   * MALFORMED_PAYLOAD_ERROR   * SERVER_ERROR 

        :return: The code of this InlineResponse4011.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """
        Sets the code of this InlineResponse4011.
        Valid Values:   * FORBIDDEN_RESPONSE   * VALIDATION_ERROR   * UNSUPPORTED_MEDIA_TYPE   * MALFORMED_PAYLOAD_ERROR   * SERVER_ERROR 

        :param code: The code of this InlineResponse4011.
        :type: str
        """

        self._code = code

    @property
    def correlation_id(self):
        """
        Gets the correlation_id of this InlineResponse4011.

        :return: The correlation_id of this InlineResponse4011.
        :rtype: str
        """
        return self._correlation_id

    @correlation_id.setter
    def correlation_id(self, correlation_id):
        """
        Sets the correlation_id of this InlineResponse4011.

        :param correlation_id: The correlation_id of this InlineResponse4011.
        :type: str
        """

        self._correlation_id = correlation_id

    @property
    def detail(self):
        """
        Gets the detail of this InlineResponse4011.

        :return: The detail of this InlineResponse4011.
        :rtype: str
        """
        return self._detail

    @detail.setter
    def detail(self, detail):
        """
        Sets the detail of this InlineResponse4011.

        :param detail: The detail of this InlineResponse4011.
        :type: str
        """

        self._detail = detail

    @property
    def fields(self):
        """
        Gets the fields of this InlineResponse4011.

        :return: The fields of this InlineResponse4011.
        :rtype: list[InlineResponse4011Fields]
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """
        Sets the fields of this InlineResponse4011.

        :param fields: The fields of this InlineResponse4011.
        :type: list[InlineResponse4011Fields]
        """

        self._fields = fields

    @property
    def localization_key(self):
        """
        Gets the localization_key of this InlineResponse4011.
        Valid Values:   * cybsapi.forbidden.response   * cybsapi.validation.error   * cybsapi.media.notsupported 

        :return: The localization_key of this InlineResponse4011.
        :rtype: str
        """
        return self._localization_key

    @localization_key.setter
    def localization_key(self, localization_key):
        """
        Sets the localization_key of this InlineResponse4011.
        Valid Values:   * cybsapi.forbidden.response   * cybsapi.validation.error   * cybsapi.media.notsupported 

        :param localization_key: The localization_key of this InlineResponse4011.
        :type: str
        """

        self._localization_key = localization_key

    @property
    def message(self):
        """
        Gets the message of this InlineResponse4011.

        :return: The message of this InlineResponse4011.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """
        Sets the message of this InlineResponse4011.

        :param message: The message of this InlineResponse4011.
        :type: str
        """

        self._message = message

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, InlineResponse4011):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
