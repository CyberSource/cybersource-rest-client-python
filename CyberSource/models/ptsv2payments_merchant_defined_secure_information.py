# coding: utf-8

"""
    CyberSource Merged Spec

    All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class Ptsv2paymentsMerchantDefinedSecureInformation(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'secure1': 'str',
        'secure2': 'str',
        'secure3': 'str',
        'secure4': 'str'
    }

    attribute_map = {
        'secure1': 'secure1',
        'secure2': 'secure2',
        'secure3': 'secure3',
        'secure4': 'secure4'
    }

    def __init__(self, secure1=None, secure2=None, secure3=None, secure4=None):
        """
        Ptsv2paymentsMerchantDefinedSecureInformation - a model defined in Swagger
        """

        self._secure1 = None
        self._secure2 = None
        self._secure3 = None
        self._secure4 = None

        if secure1 is not None:
          self.secure1 = secure1
        if secure2 is not None:
          self.secure2 = secure2
        if secure3 is not None:
          self.secure3 = secure3
        if secure4 is not None:
          self.secure4 = secure4

    @property
    def secure1(self):
        """
        Gets the secure1 of this Ptsv2paymentsMerchantDefinedSecureInformation.
        The value you assign for your merchant-secure data field 1. 

        :return: The secure1 of this Ptsv2paymentsMerchantDefinedSecureInformation.
        :rtype: str
        """
        return self._secure1

    @secure1.setter
    def secure1(self, secure1):
        """
        Sets the secure1 of this Ptsv2paymentsMerchantDefinedSecureInformation.
        The value you assign for your merchant-secure data field 1. 

        :param secure1: The secure1 of this Ptsv2paymentsMerchantDefinedSecureInformation.
        :type: str
        """

        self._secure1 = secure1

    @property
    def secure2(self):
        """
        Gets the secure2 of this Ptsv2paymentsMerchantDefinedSecureInformation.
        The value you assign for your merchant-secure data field 2. 

        :return: The secure2 of this Ptsv2paymentsMerchantDefinedSecureInformation.
        :rtype: str
        """
        return self._secure2

    @secure2.setter
    def secure2(self, secure2):
        """
        Sets the secure2 of this Ptsv2paymentsMerchantDefinedSecureInformation.
        The value you assign for your merchant-secure data field 2. 

        :param secure2: The secure2 of this Ptsv2paymentsMerchantDefinedSecureInformation.
        :type: str
        """

        self._secure2 = secure2

    @property
    def secure3(self):
        """
        Gets the secure3 of this Ptsv2paymentsMerchantDefinedSecureInformation.
        The value you assign for your merchant-secure data field 3. 

        :return: The secure3 of this Ptsv2paymentsMerchantDefinedSecureInformation.
        :rtype: str
        """
        return self._secure3

    @secure3.setter
    def secure3(self, secure3):
        """
        Sets the secure3 of this Ptsv2paymentsMerchantDefinedSecureInformation.
        The value you assign for your merchant-secure data field 3. 

        :param secure3: The secure3 of this Ptsv2paymentsMerchantDefinedSecureInformation.
        :type: str
        """

        self._secure3 = secure3

    @property
    def secure4(self):
        """
        Gets the secure4 of this Ptsv2paymentsMerchantDefinedSecureInformation.
        The value you assign for your merchant-secure data field 4. 

        :return: The secure4 of this Ptsv2paymentsMerchantDefinedSecureInformation.
        :rtype: str
        """
        return self._secure4

    @secure4.setter
    def secure4(self, secure4):
        """
        Sets the secure4 of this Ptsv2paymentsMerchantDefinedSecureInformation.
        The value you assign for your merchant-secure data field 4. 

        :param secure4: The secure4 of this Ptsv2paymentsMerchantDefinedSecureInformation.
        :type: str
        """

        self._secure4 = secure4

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, Ptsv2paymentsMerchantDefinedSecureInformation):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
