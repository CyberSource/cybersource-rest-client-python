# coding: utf-8

"""
    CyberSource Merged Spec

    All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
from six import iteritems
import re


class ECheckConfigFeaturesAccountValidationServiceProcessors(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'avs_account_ownership_service': 'bool',
        'avs_account_status_service': 'bool',
        'avs_signed_agreement': 'bool',
        'avs_calculated_response_behavior': 'str',
        'avs_additional_id': 'str',
        'enable_avs': 'bool',
        'avs_entity_id': 'str',
        'avs_result_mode': 'str',
        'enable_avs_token_creation': 'bool'
    }

    attribute_map = {
        'avs_account_ownership_service': 'avsAccountOwnershipService',
        'avs_account_status_service': 'avsAccountStatusService',
        'avs_signed_agreement': 'avsSignedAgreement',
        'avs_calculated_response_behavior': 'avsCalculatedResponseBehavior',
        'avs_additional_id': 'avsAdditionalId',
        'enable_avs': 'enableAvs',
        'avs_entity_id': 'avsEntityId',
        'avs_result_mode': 'avsResultMode',
        'enable_avs_token_creation': 'enableAvsTokenCreation'
    }

    def __init__(self, avs_account_ownership_service=None, avs_account_status_service=None, avs_signed_agreement=None, avs_calculated_response_behavior='continue', avs_additional_id=None, enable_avs=True, avs_entity_id=None, avs_result_mode=None, enable_avs_token_creation=False):
        """
        ECheckConfigFeaturesAccountValidationServiceProcessors - a model defined in Swagger
        """

        self._avs_account_ownership_service = None
        self._avs_account_status_service = None
        self._avs_signed_agreement = None
        self._avs_calculated_response_behavior = None
        self._avs_additional_id = None
        self._enable_avs = None
        self._avs_entity_id = None
        self._avs_result_mode = None
        self._enable_avs_token_creation = None

        if avs_account_ownership_service is not None:
          self.avs_account_ownership_service = avs_account_ownership_service
        if avs_account_status_service is not None:
          self.avs_account_status_service = avs_account_status_service
        if avs_signed_agreement is not None:
          self.avs_signed_agreement = avs_signed_agreement
        if avs_calculated_response_behavior is not None:
          self.avs_calculated_response_behavior = avs_calculated_response_behavior
        if avs_additional_id is not None:
          self.avs_additional_id = avs_additional_id
        if enable_avs is not None:
          self.enable_avs = enable_avs
        if avs_entity_id is not None:
          self.avs_entity_id = avs_entity_id
        if avs_result_mode is not None:
          self.avs_result_mode = avs_result_mode
        if enable_avs_token_creation is not None:
          self.enable_avs_token_creation = enable_avs_token_creation

    @property
    def avs_account_ownership_service(self):
        """
        Gets the avs_account_ownership_service of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        *NEW* Determined in WF eTicket if account has opted into the Account Ownership Service.

        :return: The avs_account_ownership_service of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        :rtype: bool
        """
        return self._avs_account_ownership_service

    @avs_account_ownership_service.setter
    def avs_account_ownership_service(self, avs_account_ownership_service):
        """
        Sets the avs_account_ownership_service of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        *NEW* Determined in WF eTicket if account has opted into the Account Ownership Service.

        :param avs_account_ownership_service: The avs_account_ownership_service of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        :type: bool
        """

        self._avs_account_ownership_service = avs_account_ownership_service

    @property
    def avs_account_status_service(self):
        """
        Gets the avs_account_status_service of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        *NEW* Determined in WF eTicket if account has opted into the Account Status Service.

        :return: The avs_account_status_service of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        :rtype: bool
        """
        return self._avs_account_status_service

    @avs_account_status_service.setter
    def avs_account_status_service(self, avs_account_status_service):
        """
        Sets the avs_account_status_service of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        *NEW* Determined in WF eTicket if account has opted into the Account Status Service.

        :param avs_account_status_service: The avs_account_status_service of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        :type: bool
        """

        self._avs_account_status_service = avs_account_status_service

    @property
    def avs_signed_agreement(self):
        """
        Gets the avs_signed_agreement of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        *NEW* Taken from Addendum Agreement Column in boarding form.

        :return: The avs_signed_agreement of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        :rtype: bool
        """
        return self._avs_signed_agreement

    @avs_signed_agreement.setter
    def avs_signed_agreement(self, avs_signed_agreement):
        """
        Sets the avs_signed_agreement of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        *NEW* Taken from Addendum Agreement Column in boarding form.

        :param avs_signed_agreement: The avs_signed_agreement of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        :type: bool
        """

        self._avs_signed_agreement = avs_signed_agreement

    @property
    def avs_calculated_response_behavior(self):
        """
        Gets the avs_calculated_response_behavior of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        *NEW*  Possible values: - continue

        :return: The avs_calculated_response_behavior of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        :rtype: str
        """
        return self._avs_calculated_response_behavior

    @avs_calculated_response_behavior.setter
    def avs_calculated_response_behavior(self, avs_calculated_response_behavior):
        """
        Sets the avs_calculated_response_behavior of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        *NEW*  Possible values: - continue

        :param avs_calculated_response_behavior: The avs_calculated_response_behavior of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        :type: str
        """

        self._avs_calculated_response_behavior = avs_calculated_response_behavior

    @property
    def avs_additional_id(self):
        """
        Gets the avs_additional_id of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        *NEW* Also known as the Additional ID. Taken from the boarding form.

        :return: The avs_additional_id of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        :rtype: str
        """
        return self._avs_additional_id

    @avs_additional_id.setter
    def avs_additional_id(self, avs_additional_id):
        """
        Sets the avs_additional_id of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        *NEW* Also known as the Additional ID. Taken from the boarding form.

        :param avs_additional_id: The avs_additional_id of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        :type: str
        """

        self._avs_additional_id = avs_additional_id

    @property
    def enable_avs(self):
        """
        Gets the enable_avs of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        *NEW*

        :return: The enable_avs of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        :rtype: bool
        """
        return self._enable_avs

    @enable_avs.setter
    def enable_avs(self, enable_avs):
        """
        Sets the enable_avs of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        *NEW*

        :param enable_avs: The enable_avs of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        :type: bool
        """

        self._enable_avs = enable_avs

    @property
    def avs_entity_id(self):
        """
        Gets the avs_entity_id of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        *NEW* Also known as the AVS Gateway Entity ID.

        :return: The avs_entity_id of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        :rtype: str
        """
        return self._avs_entity_id

    @avs_entity_id.setter
    def avs_entity_id(self, avs_entity_id):
        """
        Sets the avs_entity_id of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        *NEW* Also known as the AVS Gateway Entity ID.

        :param avs_entity_id: The avs_entity_id of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        :type: str
        """

        self._avs_entity_id = avs_entity_id

    @property
    def avs_result_mode(self):
        """
        Gets the avs_result_mode of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        *NEW*  Possible values: - FULL_RESPONSE - LOGIC_BOX

        :return: The avs_result_mode of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        :rtype: str
        """
        return self._avs_result_mode

    @avs_result_mode.setter
    def avs_result_mode(self, avs_result_mode):
        """
        Sets the avs_result_mode of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        *NEW*  Possible values: - FULL_RESPONSE - LOGIC_BOX

        :param avs_result_mode: The avs_result_mode of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        :type: str
        """

        self._avs_result_mode = avs_result_mode

    @property
    def enable_avs_token_creation(self):
        """
        Gets the enable_avs_token_creation of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        *NEW* Applicable if the merchant wants to run AVS on token creation requests only.

        :return: The enable_avs_token_creation of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        :rtype: bool
        """
        return self._enable_avs_token_creation

    @enable_avs_token_creation.setter
    def enable_avs_token_creation(self, enable_avs_token_creation):
        """
        Sets the enable_avs_token_creation of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        *NEW* Applicable if the merchant wants to run AVS on token creation requests only.

        :param enable_avs_token_creation: The enable_avs_token_creation of this ECheckConfigFeaturesAccountValidationServiceProcessors.
        :type: bool
        """

        self._enable_avs_token_creation = enable_avs_token_creation

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, ECheckConfigFeaturesAccountValidationServiceProcessors):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
