# coding: utf-8

"""
    CyberSource Merged Spec

    All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
from six import iteritems
import re


class InlineResponse2006Devices(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'reader_id': 'str',
        'serial_number': 'str',
        'model': 'str',
        'make': 'str',
        'hardware_revision': 'str',
        'status': 'str',
        'status_change_reason': 'str',
        'merchant_id': 'str',
        'account_id': 'str',
        'terminal_creation_date': 'datetime',
        'terminal_updation_date': 'datetime',
        'payment_processor_to_terminal_map': 'InlineResponse2006PaymentProcessorToTerminalMap'
    }

    attribute_map = {
        'reader_id': 'readerId',
        'serial_number': 'serialNumber',
        'model': 'model',
        'make': 'make',
        'hardware_revision': 'hardwareRevision',
        'status': 'status',
        'status_change_reason': 'statusChangeReason',
        'merchant_id': 'merchantId',
        'account_id': 'accountId',
        'terminal_creation_date': 'terminalCreationDate',
        'terminal_updation_date': 'terminalUpdationDate',
        'payment_processor_to_terminal_map': 'paymentProcessorToTerminalMap'
    }

    def __init__(self, reader_id=None, serial_number=None, model=None, make=None, hardware_revision=None, status=None, status_change_reason=None, merchant_id=None, account_id=None, terminal_creation_date=None, terminal_updation_date=None, payment_processor_to_terminal_map=None):
        """
        InlineResponse2006Devices - a model defined in Swagger
        """

        self._reader_id = None
        self._serial_number = None
        self._model = None
        self._make = None
        self._hardware_revision = None
        self._status = None
        self._status_change_reason = None
        self._merchant_id = None
        self._account_id = None
        self._terminal_creation_date = None
        self._terminal_updation_date = None
        self._payment_processor_to_terminal_map = None

        if reader_id is not None:
          self.reader_id = reader_id
        if serial_number is not None:
          self.serial_number = serial_number
        if model is not None:
          self.model = model
        if make is not None:
          self.make = make
        if hardware_revision is not None:
          self.hardware_revision = hardware_revision
        if status is not None:
          self.status = status
        if status_change_reason is not None:
          self.status_change_reason = status_change_reason
        if merchant_id is not None:
          self.merchant_id = merchant_id
        if account_id is not None:
          self.account_id = account_id
        if terminal_creation_date is not None:
          self.terminal_creation_date = terminal_creation_date
        if terminal_updation_date is not None:
          self.terminal_updation_date = terminal_updation_date
        if payment_processor_to_terminal_map is not None:
          self.payment_processor_to_terminal_map = payment_processor_to_terminal_map

    @property
    def reader_id(self):
        """
        Gets the reader_id of this InlineResponse2006Devices.

        :return: The reader_id of this InlineResponse2006Devices.
        :rtype: str
        """
        return self._reader_id

    @reader_id.setter
    def reader_id(self, reader_id):
        """
        Sets the reader_id of this InlineResponse2006Devices.

        :param reader_id: The reader_id of this InlineResponse2006Devices.
        :type: str
        """

        self._reader_id = reader_id

    @property
    def serial_number(self):
        """
        Gets the serial_number of this InlineResponse2006Devices.

        :return: The serial_number of this InlineResponse2006Devices.
        :rtype: str
        """
        return self._serial_number

    @serial_number.setter
    def serial_number(self, serial_number):
        """
        Sets the serial_number of this InlineResponse2006Devices.

        :param serial_number: The serial_number of this InlineResponse2006Devices.
        :type: str
        """

        self._serial_number = serial_number

    @property
    def model(self):
        """
        Gets the model of this InlineResponse2006Devices.

        :return: The model of this InlineResponse2006Devices.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """
        Sets the model of this InlineResponse2006Devices.

        :param model: The model of this InlineResponse2006Devices.
        :type: str
        """

        self._model = model

    @property
    def make(self):
        """
        Gets the make of this InlineResponse2006Devices.

        :return: The make of this InlineResponse2006Devices.
        :rtype: str
        """
        return self._make

    @make.setter
    def make(self, make):
        """
        Sets the make of this InlineResponse2006Devices.

        :param make: The make of this InlineResponse2006Devices.
        :type: str
        """

        self._make = make

    @property
    def hardware_revision(self):
        """
        Gets the hardware_revision of this InlineResponse2006Devices.

        :return: The hardware_revision of this InlineResponse2006Devices.
        :rtype: str
        """
        return self._hardware_revision

    @hardware_revision.setter
    def hardware_revision(self, hardware_revision):
        """
        Sets the hardware_revision of this InlineResponse2006Devices.

        :param hardware_revision: The hardware_revision of this InlineResponse2006Devices.
        :type: str
        """

        self._hardware_revision = hardware_revision

    @property
    def status(self):
        """
        Gets the status of this InlineResponse2006Devices.
        Status of the device. Possible Values:   - 'ACTIVE'   - 'INACTIVE' 

        :return: The status of this InlineResponse2006Devices.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this InlineResponse2006Devices.
        Status of the device. Possible Values:   - 'ACTIVE'   - 'INACTIVE' 

        :param status: The status of this InlineResponse2006Devices.
        :type: str
        """

        self._status = status

    @property
    def status_change_reason(self):
        """
        Gets the status_change_reason of this InlineResponse2006Devices.
        Reason for change in status.

        :return: The status_change_reason of this InlineResponse2006Devices.
        :rtype: str
        """
        return self._status_change_reason

    @status_change_reason.setter
    def status_change_reason(self, status_change_reason):
        """
        Sets the status_change_reason of this InlineResponse2006Devices.
        Reason for change in status.

        :param status_change_reason: The status_change_reason of this InlineResponse2006Devices.
        :type: str
        """

        self._status_change_reason = status_change_reason

    @property
    def merchant_id(self):
        """
        Gets the merchant_id of this InlineResponse2006Devices.
        ID of the merchant to whom this device is assigned.

        :return: The merchant_id of this InlineResponse2006Devices.
        :rtype: str
        """
        return self._merchant_id

    @merchant_id.setter
    def merchant_id(self, merchant_id):
        """
        Sets the merchant_id of this InlineResponse2006Devices.
        ID of the merchant to whom this device is assigned.

        :param merchant_id: The merchant_id of this InlineResponse2006Devices.
        :type: str
        """

        self._merchant_id = merchant_id

    @property
    def account_id(self):
        """
        Gets the account_id of this InlineResponse2006Devices.
        ID of the account to whom the device assigned.

        :return: The account_id of this InlineResponse2006Devices.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """
        Sets the account_id of this InlineResponse2006Devices.
        ID of the account to whom the device assigned.

        :param account_id: The account_id of this InlineResponse2006Devices.
        :type: str
        """

        self._account_id = account_id

    @property
    def terminal_creation_date(self):
        """
        Gets the terminal_creation_date of this InlineResponse2006Devices.
        Timestamp in which the device was created.

        :return: The terminal_creation_date of this InlineResponse2006Devices.
        :rtype: datetime
        """
        return self._terminal_creation_date

    @terminal_creation_date.setter
    def terminal_creation_date(self, terminal_creation_date):
        """
        Sets the terminal_creation_date of this InlineResponse2006Devices.
        Timestamp in which the device was created.

        :param terminal_creation_date: The terminal_creation_date of this InlineResponse2006Devices.
        :type: datetime
        """

        self._terminal_creation_date = terminal_creation_date

    @property
    def terminal_updation_date(self):
        """
        Gets the terminal_updation_date of this InlineResponse2006Devices.
        Timestamp in which the device was updated/modified.

        :return: The terminal_updation_date of this InlineResponse2006Devices.
        :rtype: datetime
        """
        return self._terminal_updation_date

    @terminal_updation_date.setter
    def terminal_updation_date(self, terminal_updation_date):
        """
        Sets the terminal_updation_date of this InlineResponse2006Devices.
        Timestamp in which the device was updated/modified.

        :param terminal_updation_date: The terminal_updation_date of this InlineResponse2006Devices.
        :type: datetime
        """

        self._terminal_updation_date = terminal_updation_date

    @property
    def payment_processor_to_terminal_map(self):
        """
        Gets the payment_processor_to_terminal_map of this InlineResponse2006Devices.

        :return: The payment_processor_to_terminal_map of this InlineResponse2006Devices.
        :rtype: InlineResponse2006PaymentProcessorToTerminalMap
        """
        return self._payment_processor_to_terminal_map

    @payment_processor_to_terminal_map.setter
    def payment_processor_to_terminal_map(self, payment_processor_to_terminal_map):
        """
        Sets the payment_processor_to_terminal_map of this InlineResponse2006Devices.

        :param payment_processor_to_terminal_map: The payment_processor_to_terminal_map of this InlineResponse2006Devices.
        :type: InlineResponse2006PaymentProcessorToTerminalMap
        """

        self._payment_processor_to_terminal_map = payment_processor_to_terminal_map

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, InlineResponse2006Devices):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
