# coding: utf-8

"""
    CyberSource Merged Spec

    All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
from six import iteritems
import re


class InlineResponse2012SetupsValueAddedServices(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'reporting': 'InlineResponse2012SetupsPaymentsDigitalPayments',
        'transaction_search': 'InlineResponse2012SetupsPaymentsDigitalPayments',
        'bank_account_validation': 'InlineResponse2012SetupsPaymentsDigitalPayments'
    }

    attribute_map = {
        'reporting': 'reporting',
        'transaction_search': 'transactionSearch',
        'bank_account_validation': 'bankAccountValidation'
    }

    def __init__(self, reporting=None, transaction_search=None, bank_account_validation=None):
        """
        InlineResponse2012SetupsValueAddedServices - a model defined in Swagger
        """

        self._reporting = None
        self._transaction_search = None
        self._bank_account_validation = None

        if reporting is not None:
          self.reporting = reporting
        if transaction_search is not None:
          self.transaction_search = transaction_search
        if bank_account_validation is not None:
          self.bank_account_validation = bank_account_validation

    @property
    def reporting(self):
        """
        Gets the reporting of this InlineResponse2012SetupsValueAddedServices.

        :return: The reporting of this InlineResponse2012SetupsValueAddedServices.
        :rtype: InlineResponse2012SetupsPaymentsDigitalPayments
        """
        return self._reporting

    @reporting.setter
    def reporting(self, reporting):
        """
        Sets the reporting of this InlineResponse2012SetupsValueAddedServices.

        :param reporting: The reporting of this InlineResponse2012SetupsValueAddedServices.
        :type: InlineResponse2012SetupsPaymentsDigitalPayments
        """

        self._reporting = reporting

    @property
    def transaction_search(self):
        """
        Gets the transaction_search of this InlineResponse2012SetupsValueAddedServices.

        :return: The transaction_search of this InlineResponse2012SetupsValueAddedServices.
        :rtype: InlineResponse2012SetupsPaymentsDigitalPayments
        """
        return self._transaction_search

    @transaction_search.setter
    def transaction_search(self, transaction_search):
        """
        Sets the transaction_search of this InlineResponse2012SetupsValueAddedServices.

        :param transaction_search: The transaction_search of this InlineResponse2012SetupsValueAddedServices.
        :type: InlineResponse2012SetupsPaymentsDigitalPayments
        """

        self._transaction_search = transaction_search

    @property
    def bank_account_validation(self):
        """
        Gets the bank_account_validation of this InlineResponse2012SetupsValueAddedServices.

        :return: The bank_account_validation of this InlineResponse2012SetupsValueAddedServices.
        :rtype: InlineResponse2012SetupsPaymentsDigitalPayments
        """
        return self._bank_account_validation

    @bank_account_validation.setter
    def bank_account_validation(self, bank_account_validation):
        """
        Sets the bank_account_validation of this InlineResponse2012SetupsValueAddedServices.

        :param bank_account_validation: The bank_account_validation of this InlineResponse2012SetupsValueAddedServices.
        :type: InlineResponse2012SetupsPaymentsDigitalPayments
        """

        self._bank_account_validation = bank_account_validation

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, InlineResponse2012SetupsValueAddedServices):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
