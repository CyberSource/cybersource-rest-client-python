# coding: utf-8

"""
    CyberSource Merged Spec

    All CyberSource API specs merged together. These are available at https://developer.cybersource.com/api/reference/api-reference.html

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
from six import iteritems
import re


class PaymentsProductsUnifiedCheckoutConfigurationInformationConfigurationsFeaturesPaze(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'financial_institution': 'str',
        'financial_institution_contract': 'bool',
        'paze_enabled_in_profile': 'bool'
    }

    attribute_map = {
        'financial_institution': 'financialInstitution',
        'financial_institution_contract': 'financialInstitutionContract',
        'paze_enabled_in_profile': 'pazeEnabledInProfile'
    }

    def __init__(self, financial_institution=None, financial_institution_contract=None, paze_enabled_in_profile=None):
        """
        PaymentsProductsUnifiedCheckoutConfigurationInformationConfigurationsFeaturesPaze - a model defined in Swagger
        """

        self._financial_institution = None
        self._financial_institution_contract = None
        self._paze_enabled_in_profile = None

        if financial_institution is not None:
          self.financial_institution = financial_institution
        if financial_institution_contract is not None:
          self.financial_institution_contract = financial_institution_contract
        if paze_enabled_in_profile is not None:
          self.paze_enabled_in_profile = paze_enabled_in_profile

    @property
    def financial_institution(self):
        """
        Gets the financial_institution of this PaymentsProductsUnifiedCheckoutConfigurationInformationConfigurationsFeaturesPaze.
        Indicates the financial institution with whom the contract has been signed  Possible values: - BANKOFAMERICA - WELLSFARGO

        :return: The financial_institution of this PaymentsProductsUnifiedCheckoutConfigurationInformationConfigurationsFeaturesPaze.
        :rtype: str
        """
        return self._financial_institution

    @financial_institution.setter
    def financial_institution(self, financial_institution):
        """
        Sets the financial_institution of this PaymentsProductsUnifiedCheckoutConfigurationInformationConfigurationsFeaturesPaze.
        Indicates the financial institution with whom the contract has been signed  Possible values: - BANKOFAMERICA - WELLSFARGO

        :param financial_institution: The financial_institution of this PaymentsProductsUnifiedCheckoutConfigurationInformationConfigurationsFeaturesPaze.
        :type: str
        """

        self._financial_institution = financial_institution

    @property
    def financial_institution_contract(self):
        """
        Gets the financial_institution_contract of this PaymentsProductsUnifiedCheckoutConfigurationInformationConfigurationsFeaturesPaze.
        Indicates if the contract has been signed with the selected bank

        :return: The financial_institution_contract of this PaymentsProductsUnifiedCheckoutConfigurationInformationConfigurationsFeaturesPaze.
        :rtype: bool
        """
        return self._financial_institution_contract

    @financial_institution_contract.setter
    def financial_institution_contract(self, financial_institution_contract):
        """
        Sets the financial_institution_contract of this PaymentsProductsUnifiedCheckoutConfigurationInformationConfigurationsFeaturesPaze.
        Indicates if the contract has been signed with the selected bank

        :param financial_institution_contract: The financial_institution_contract of this PaymentsProductsUnifiedCheckoutConfigurationInformationConfigurationsFeaturesPaze.
        :type: bool
        """

        self._financial_institution_contract = financial_institution_contract

    @property
    def paze_enabled_in_profile(self):
        """
        Gets the paze_enabled_in_profile of this PaymentsProductsUnifiedCheckoutConfigurationInformationConfigurationsFeaturesPaze.
        Paze enabled in the profile for the merchants

        :return: The paze_enabled_in_profile of this PaymentsProductsUnifiedCheckoutConfigurationInformationConfigurationsFeaturesPaze.
        :rtype: bool
        """
        return self._paze_enabled_in_profile

    @paze_enabled_in_profile.setter
    def paze_enabled_in_profile(self, paze_enabled_in_profile):
        """
        Sets the paze_enabled_in_profile of this PaymentsProductsUnifiedCheckoutConfigurationInformationConfigurationsFeaturesPaze.
        Paze enabled in the profile for the merchants

        :param paze_enabled_in_profile: The paze_enabled_in_profile of this PaymentsProductsUnifiedCheckoutConfigurationInformationConfigurationsFeaturesPaze.
        :type: bool
        """

        self._paze_enabled_in_profile = paze_enabled_in_profile

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, PaymentsProductsUnifiedCheckoutConfigurationInformationConfigurationsFeaturesPaze):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
